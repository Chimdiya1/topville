[{"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\index.js":"1","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\App.js":"2","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\home\\home.jsx":"4","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\home\\whyChooseUs.jsx":"5","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\footer\\footer.jsx":"6","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\faq\\faq.jsx":"7","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\hero\\hero.jsx":"8","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\terms\\terms.jsx":"9","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\how-it-works\\how-it-works.jsx":"10","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\worksCard\\worksCard.jsx":"11","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\about\\about.jsx":"12","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\aboutCard\\aboutCard.jsx":"13","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\blog\\blog.jsx":"14","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\blogCard\\blogCard.jsx":"15","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\contact\\contact.jsx":"16","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\errorMessage\\errorMessage.js":"17","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\listings\\listings.jsx":"18","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\listingCard\\listingCard.jsx":"19","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\search\\search.jsx":"20","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\listingPage\\listingPage.jsx":"21","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\scroll-to-top.component.jsx":"22","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\redux\\listings\\listings.reducer.js":"23","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\sampleData.js":"24","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\pagination\\pagination.component.jsx":"25","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\container.jsx":"26","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\mobileNav\\mobileNav.js":"27","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\header\\header.jsx":"28","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\redux\\store.js":"29","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\redux\\blogs\\blogs.reducer.js":"30","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\blogPage\\blogPage.jsx":"31","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\sampleBlogData.js":"32","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\login\\login.jsx":"33","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\adminDashboard\\adminDashboard.jsx":"34","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\addListing\\addListing.jsx":"35","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\redux\\blogs\\blogs.actions.js":"36","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\redux\\listings\\listings.actions.js":"37","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\redux\\root-reducer.js":"38","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\firebase.js":"39","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\contact\\sendContact.js":"40","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\adminCard\\adminCard.jsx":"41","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\adminList\\adminList.jsx":"42","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\contact\\contact2.jsx":"43","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\404\\404.jsx":"44","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\editListing\\editListing.jsx":"45","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\editListing\\editListing.jsx":"46","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\addBlog\\addBlog.jsx":"47","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\adminBlogCard\\adminBlogCard.jsx":"48","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\editBlogPostForm\\editBlogPostForm.jsx":"49","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\editBlogPost\\editBlogPost.jsx":"50"},{"size":1306,"mtime":1607179412332,"results":"51","hashOfConfig":"52"},{"size":3072,"mtime":1608213427477,"results":"53","hashOfConfig":"52"},{"size":362,"mtime":1606773243992,"results":"54","hashOfConfig":"52"},{"size":4208,"mtime":1608151707946,"results":"55","hashOfConfig":"52"},{"size":2468,"mtime":1607891037689,"results":"56","hashOfConfig":"52"},{"size":4284,"mtime":1607890826356,"results":"57","hashOfConfig":"52"},{"size":3615,"mtime":1607041730084,"results":"58","hashOfConfig":"52"},{"size":863,"mtime":1607192166799,"results":"59","hashOfConfig":"52"},{"size":2946,"mtime":1607077892114,"results":"60","hashOfConfig":"52"},{"size":3180,"mtime":1607885451723,"results":"61","hashOfConfig":"52"},{"size":1407,"mtime":1607885454226,"results":"62","hashOfConfig":"52"},{"size":1283,"mtime":1607116519651,"results":"63","hashOfConfig":"52"},{"size":671,"mtime":1607117193863,"results":"64","hashOfConfig":"52"},{"size":2224,"mtime":1608197217715,"results":"65","hashOfConfig":"52"},{"size":1679,"mtime":1608199199479,"results":"66","hashOfConfig":"52"},{"size":6193,"mtime":1607148988589,"results":"67","hashOfConfig":"52"},{"size":351,"mtime":1607122954263,"results":"68","hashOfConfig":"52"},{"size":3287,"mtime":1608153264570,"results":"69","hashOfConfig":"52"},{"size":3166,"mtime":1608153649543,"results":"70","hashOfConfig":"52"},{"size":13519,"mtime":1608153580857,"results":"71","hashOfConfig":"52"},{"size":4384,"mtime":1607870068324,"results":"72","hashOfConfig":"52"},{"size":268,"mtime":1607178487514,"results":"73","hashOfConfig":"52"},{"size":481,"mtime":1607178390650,"results":"74","hashOfConfig":"52"},{"size":1995,"mtime":1607184521706,"results":"75","hashOfConfig":"52"},{"size":1511,"mtime":1607180111007,"results":"76","hashOfConfig":"52"},{"size":271,"mtime":1607191562547,"results":"77","hashOfConfig":"52"},{"size":4378,"mtime":1608153822192,"results":"78","hashOfConfig":"52"},{"size":3961,"mtime":1608152543036,"results":"79","hashOfConfig":"52"},{"size":306,"mtime":1607179435599,"results":"80","hashOfConfig":"52"},{"size":305,"mtime":1607415709163,"results":"81","hashOfConfig":"52"},{"size":2904,"mtime":1608452687617,"results":"82","hashOfConfig":"52"},{"size":3679,"mtime":1607417927864,"results":"83","hashOfConfig":"52"},{"size":4444,"mtime":1607859909812,"results":"84","hashOfConfig":"52"},{"size":2197,"mtime":1608452888664,"results":"85","hashOfConfig":"52"},{"size":15006,"mtime":1607868608051,"results":"86","hashOfConfig":"52"},{"size":87,"mtime":1607417267692,"results":"87","hashOfConfig":"52"},{"size":219,"mtime":1607178390647,"results":"88","hashOfConfig":"52"},{"size":282,"mtime":1607415927328,"results":"89","hashOfConfig":"52"},{"size":1835,"mtime":1608197079531,"results":"90","hashOfConfig":"52"},{"size":287,"mtime":1607122736707,"results":"91","hashOfConfig":"52"},{"size":3996,"mtime":1608161927604,"results":"92","hashOfConfig":"52"},{"size":599,"mtime":1607862048209,"results":"93","hashOfConfig":"52"},{"size":1537,"mtime":1607888472420,"results":"94","hashOfConfig":"52"},{"size":887,"mtime":1607890604017,"results":"95","hashOfConfig":"52"},{"size":1148,"mtime":1608157187846,"results":"96","hashOfConfig":"52"},{"size":16387,"mtime":1608161711538,"results":"97","hashOfConfig":"52"},{"size":7117,"mtime":1608198845843,"results":"98","hashOfConfig":"52"},{"size":2960,"mtime":1608452072561,"results":"99","hashOfConfig":"52"},{"size":7804,"mtime":1608452780108,"results":"100","hashOfConfig":"52"},{"size":1158,"mtime":1608213391292,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"blpjgq",{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"104"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"104"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"104"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"104"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"130"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"104"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"104"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"104"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"104"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"104"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"130"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\index.js",[],["226","227"],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\App.js",["228","229","230","231","232"],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\home\\home.jsx",["233","234"],"import React from 'react';\r\nimport { Flex, Heading, Button,Text,Link } from \"@chakra-ui/react\"\r\nimport {Link as rrdLink} from 'react-router-dom'\r\n\r\nimport Why from './whyChooseUs'\r\n\r\nconst Home = () => {\r\n    return ( \r\n        <div className=\"home\">\r\n            <Flex\r\n                background= \"linear-gradient( rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5) ), url('/assets/home.jpg')\"\r\n                backgroundPosition=\"center\"\r\n                backgroundRepeat=\"no-repeat\"\r\n                backgroundSize=\"cover\"\r\n                height='100vh'\r\n                align='center'\r\n                justify='center'\r\n                direction='column'\r\n            >\r\n                <Heading as=\"h2\" fontWeight='400' letterSpacing='wide' textAlign='center' fontSize={[\"3xl\", \"null\", \"4xl\", \"5xl\"]} color=\"white\" mb={5}>\r\n                    FIND YOUR PERFECT HOME\r\n                </Heading>\r\n                <Link as={rrdLink} to='/listings'>\r\n                    <Button\r\n                        backgroundColor='brand.primary'\r\n                        color='white'\r\n                        width='240px'\r\n                        height='60px'\r\n                        fontSize='24px'\r\n                        borderRadius='0'\r\n                        size='lg'\r\n                        _hover={{ bg: \"brand.secondary\" }}\r\n                    >\r\n                        Explore\r\n                    </Button>\r\n                </Link>\r\n            </Flex>\r\n            {/* <Why />\r\n            <Flex\r\n                background= \"linear-gradient( rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5) ), url('/assets/home.jpg')\"\r\n                backgroundPosition=\"center\"\r\n                backgroundRepeat=\"no-repeat\"\r\n                backgroundSize=\"cover\"\r\n                height='60vh'\r\n                align='center'\r\n                justify='center'\r\n                direction='column'\r\n            >\r\n                <Heading as=\"h3\" fontWeight='400' letterSpacing='wide' textAlign='center' fontSize={[\"2xl\", \"null\", \"3xl\", \"4xl\"]} color=\"white\" >\r\n                    Best Homes & Properties\r\n                </Heading>\r\n                <Text textAlign='center' my={25} color='silver' fontSize=\"lg\">Let’s help you get your money’s worth</Text>\r\n                <Link as={rrdLink} to='/listings'>\r\n                    <Button\r\n                        backgroundColor='brand.primary'\r\n                        color='white'\r\n                        width='240px'\r\n                        height='60px'\r\n                        fontSize='24px'\r\n                        borderRadius='0'\r\n                        size='lg'\r\n                        _hover={{ bg: \"brand.secondary\",textDecoration:'none' }}\r\n                    >\r\n                        Explore\r\n                    </Button>\r\n                </Link>\r\n            </Flex>\r\n            <Flex\r\n                background= \"linear-gradient( rgba(45, 122, 40, 0.83), rgba(45, 122, 40, 0.83) ), url('/assets/home.jpg')\"\r\n                backgroundPosition=\"center\"\r\n                backgroundRepeat=\"no-repeat\"\r\n                backgroundSize=\"cover\"\r\n                height='40vh'\r\n                align='center'\r\n                justify='center'\r\n                direction='column'\r\n            >\r\n                <Heading as=\"h3\" fontWeight='400' letterSpacing='wide' textAlign='center' fontSize={[\"2xl\", \"null\", \"3xl\", \"4xl\"]} color=\"white\" >\r\n                    Ask our top consultants for a personalized offer today.\r\n                </Heading>\r\n                <a href=\"tel:09134931040\">\r\n                    <Button\r\n                        backgroundColor='transparent'\r\n                        border='5px solid white'\r\n                        color='white'\r\n                        width='240px'\r\n                        height='60px'\r\n                        fontSize='xl'\r\n                        mt={10}\r\n                        borderRadius='0'\r\n                        size='lg'\r\n                        _hover={{ bg: \"white\",color:'black' }}\r\n                    >\r\n                        CALL 09134931040\r\n                    </Button>\r\n                </a>\r\n            </Flex> */}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Home;","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\home\\whyChooseUs.jsx",["235","236"],"import React from 'react';\r\nimport { Box, Heading, Flex, Image,Text} from \"@chakra-ui/react\"\r\nimport Dollar from '../../assets/dollar.png'\r\nimport shake from '../../assets/shake.png'\r\nimport shield from '../../assets/shield.png'\r\nconst Why = () => {\r\n    return ( \r\n        <Box my={10}>\r\n            <Heading as=\"h3\" letterSpacing='wide' textAlign='center' fontSize={[\"2xl\", \"null\", \"3xl\", \"4xl\"]} my={7}>\r\n                Why Choose Us\r\n            </Heading>\r\n            <Flex maxW=\"1200px\" mx='auto' direction={[\"column\", \"null\", \"row\", \"row\"]} px={[5,null,null,null,15]} align='center' justifyContent='space-between'>\r\n                <Box d='flex' flexDir='column' alignItems='center' w='315px' mb={30}>\r\n                    <Image src={Dollar} alt='dollar' />\r\n                    {/* <Heading my={2} as=\"h2\" color='brand.bold' size=\"lg\">\r\n                    Affordable\r\n                    </Heading> */}\r\n                    <Text textAlign='center' color='GrayText' fontSize=\"md\">\r\n                        We deliver high quality and affordable properties and\r\n                        also educate prospective clients about current market\r\n                        trends using our blog so as to make better purchasing\r\n                        decisions.\r\n                    </Text>\r\n                </Box>\r\n                {/* <Box d='flex' flexDir='column' alignItems='center' w='315px' mb={30}>\r\n                    <Image src={shake} alt='dollar' />\r\n                    <Heading my={2} as=\"h2\" color='brand.bold' size=\"lg\">\r\n                    Affordable\r\n                    </Heading>\r\n                    <Text textAlign='center' color='GrayText' fontSize=\"md\">Some vague text about how using our service helps people and some other stuff. TBH this is just to fill up space, content would come much later</Text>\r\n                </Box>\r\n                <Box d='flex' flexDir='column' alignItems='center' w='315px' mb={30}>\r\n                    <Image src={shield} alt='dollar' />\r\n                    <Heading my={2} as=\"h2\" color='brand.bold' size=\"lg\">\r\n                    Affordable\r\n                    </Heading>\r\n                    <Text textAlign='center' color='GrayText' fontSize=\"md\">Some vague text about how using our service helps people and some other stuff. TBH this is just to fill up space, content would come much later</Text>\r\n                </Box> */}\r\n            </Flex>\r\n        </Box>\r\n     );\r\n}\r\n \r\nexport default Why;","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\footer\\footer.jsx",["237"],"import React from 'react';\r\nimport { Box, Heading, Flex, Image, Text } from \"@chakra-ui/react\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWhatsapp,faYoutube,faTwitter,faInstagram,faFacebook } from '@fortawesome/free-brands-svg-icons'\r\nimport {Link} from 'react-router-dom'\r\nconst Footer = () => {\r\n    return ( \r\n        <Box background='gray.800' p={5} pt={20}>\r\n            <Flex maxW=\"1200px\" mx='auto' direction={[\"column\", \"null\", \"row\", \"row\"]} px={[5,null,null,null,15]} align='flex-start' justifyContent='space-between'>\r\n                <Box d='flex' flexDir='column' alignItems='flex-start' w={['250px',null,'300',null,'350px']} mb={30}>\r\n                    <Heading mb={2} as=\"h5\" color='gray.100' size=\"md\">\r\n                        About TopVille  Homes\r\n                    </Heading>\r\n                    <Box width=\"40%\" bg='white' height={1} mb={4}/>\r\n                    <Text textAlign='left' color='gray.300' fontSize={[\"sm\",\"md\"]}>\r\n                        TopVille is a full-service Real estate brokerage(agency) \r\n                        that uses modern technology to reach out to wide range of \r\n                        prospective buyers, sellers and leasers. \r\n                        TopVille specializes in acquiring,owning,managing,selling and \r\n                        leasing of all kinds of Landed properties. \r\n                        Our foremost priority is client’s comfort and Satisfaction.\r\n                    </Text>\r\n                </Box>\r\n                <Box flex=\".5\" d='flex' flexDir='column' alignItems='flex-start' mb={30}>\r\n                    <Heading mb={2} as=\"h5\" color='gray.100' size=\"md\">\r\n                        Navigations\r\n                    </Heading>\r\n                    <Box width=\"40%\" bg='white' height={1} mb={4}/>\r\n                    <Flex direction=\"row\">\r\n                        <Flex direction=\"column\" mr={[15, null, null, null, 20]}>\r\n                            <Link to=\"/\">\r\n                                <Text textAlign='left' color='gray.300' fontSize=\"md\">Home</Text>\r\n                            </Link>\r\n                            <Link to=\"/listings\">\r\n                                <Text textAlign='left' color='gray.300' fontSize=\"md\">Buy</Text>\r\n                            </Link>\r\n                            <Link to=\"/listings\">\r\n                                <Text textAlign='left' color='gray.300' fontSize=\"md\">Rent</Text>\r\n                            </Link>\r\n                            <Link to=\"/listings\">\r\n                                <Text textAlign='left' color='gray.300' fontSize=\"md\">Properties</Text>\r\n                            </Link>\r\n                        </Flex>\r\n                        <Flex direction=\"column\">\r\n                            <Link to=\"/\">\r\n                                <Text textAlign='left' color='gray.300' fontSize=\"md\">Services</Text>\r\n                            </Link>\r\n                            <Link to=\"/\">\r\n                                <Text textAlign='left' color='gray.300' fontSize=\"md\">Contact</Text>\r\n                            </Link>\r\n                        </Flex>\r\n                    </Flex>\r\n                </Box>\r\n                <Box d='flex' flexDir='column' w={['250px',null,null,null,'150px']} alignItems='flex-start' mb={30}>\r\n                    <Heading mb={2} as=\"h5\" color='gray.100' size=\"md\">\r\n                        Follow Us\r\n                    </Heading>\r\n                    <Box width=\"40%\" bg='white' height={1} mb={4}/>\r\n                    <Flex direction=\"row\" w='200px' justifyContent=\"space-between\" >\r\n                        <a href=\"/\"><FontAwesomeIcon color=\"white\" icon={faWhatsapp} size='2x' /></a>\r\n                        <a href=\"/\"><FontAwesomeIcon color=\"white\" icon={faYoutube} size='2x' /></a>\r\n                        <a href=\"/\"><FontAwesomeIcon color=\"white\" icon={faTwitter}  size='2x'/></a>\r\n                        <a href=\"/\"><FontAwesomeIcon color=\"white\" icon={faInstagram}  size='2x'/></a>\r\n                        <a href=\"/\"><FontAwesomeIcon color=\"white\" icon={faFacebook}  size='2x'/></a>\r\n                    </Flex>\r\n                </Box>\r\n            </Flex>\r\n        </Box>\r\n     );\r\n}\r\n \r\nexport default Footer;","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\faq\\faq.jsx",[],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\hero\\hero.jsx",[],["238","239"],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\terms\\terms.jsx",[],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\how-it-works\\how-it-works.jsx",["240"],"import React from 'react';\r\nimport Hero from '../../components/hero/hero'\r\nimport {\r\n    Box,\r\n    Flex,\r\n    Image\r\n    \r\n} from \"@chakra-ui/react\"\r\nimport WorksCard from '../../components/worksCard/worksCard'\r\nimport contact from '../../assets/contact.png'\r\nimport pay from '../../assets/pay.png'\r\nimport inspect from '../../assets/inspect.png'\r\nimport search from '../../assets/search-house.png'\r\n\r\nlet text = 'We want you to get the best out of life. After a stressful week, a weekend getaway might be what you need to refuel and refresh for the coming week.'\r\n\r\nconst HowItWorks = () => {\r\n    return ( \r\n        <Box >\r\n            <Hero text=\"How It Works\" /> \r\n            <Flex flexDir='column' alignItems='center' w='100' py='50px'>\r\n                <Flex mb='50px' flexDir={['column-reverse', null, 'row']} alignItems='center' justifyContent='space-between' width={['100%','80%','60%',null ]}>\r\n                    <WorksCard\r\n                        heading='Search'\r\n                        text='Navigate through our listings for properties available for sale/lease in your location.'\r\n                        buttonText='View Our Listings'\r\n                        address={'/listings'}\r\n                    />                    \r\n                    <Image w={['250px','300px',null,null, '350px']} src={search} alt='search'/>\r\n                </Flex>\r\n                <Flex mb='50px' flexDir={['column-reverse', null, 'row-reverse']} alignItems='center' justifyContent='space-between' width={['100%','80%','60%',null ]}>\r\n                    <WorksCard\r\n                        heading='Contact Us'\r\n                        text=' Contact our experienced  agent who will guide you every step of the way.'\r\n                        buttonText='Contact'\r\n                        address={'/contact'}\r\n                    />                    \r\n                    <Image w={['250px','300px',null,null, '350px']} src={contact} alt='contact'/>\r\n                </Flex>\r\n                <Flex mb='50px' flexDir={['column-reverse', null, 'row']} alignItems='center' justifyContent='space-between' width={['100%','80%','60%',null ]}>\r\n                    <WorksCard\r\n                        heading='Inspect'\r\n                        text='TopVille assigned agent will organize an open-house tour of the property for you to get a clearer picture of what you’re paying for.'\r\n                    />                    \r\n                    <Image w={['250px','300px',null,null, '350px']} src={inspect} alt='inspect'/>\r\n                </Flex>\r\n                <Flex mb='50px' flexDir={['column-reverse', null, 'row-reverse']} alignItems='center' justifyContent='space-between' width={['100%','80%','60%',null ]}>\r\n                    <WorksCard\r\n                        heading='Make Payment'\r\n                        text=\"If satisfied with the house,then proceed to make payment through the appropriate channels.\"\r\n                    />                    \r\n                    <Image w={['250px','300px',null,null, '350px']} src={pay} alt='pay'/>\r\n                </Flex>\r\n            </Flex>\r\n            \r\n        </Box>\r\n     );\r\n}\r\n \r\nexport default HowItWorks;","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\worksCard\\worksCard.jsx",[],["241","242"],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\about\\about.jsx",["243","244","245","246"],"import React from 'react';\r\nimport Hero from '../../components/hero/hero'\r\nimport {\r\n    Box,\r\n    SimpleGrid,\r\n    Flex,\r\n    Image,\r\n    Text,\r\n    Heading\r\n    \r\n} from \"@chakra-ui/react\"\r\nimport AboutCard from '../../components/aboutCard/aboutCard'\r\nimport dollar from '../../assets/dollar.png'\r\n\r\nlet text = 'Some vague text about how using our service helps people and some other stuff. TBH this is just to fill up space, content would come much later '\r\n\r\nconst About = () => {\r\n    return ( \r\n        <Box bg='gray.100' >\r\n            <Hero text=\"About Us\" /> \r\n            <SimpleGrid minChildWidth= \"300px\" paddingY='50px' spacing=\"40px\" m='auto' justifyContent='space-between' width={['90%','80%',null ]}>\r\n                <AboutCard img={dollar} text={text} heading='Affordable'/>\r\n                <AboutCard img={dollar} text={text} heading='Affordable'/>\r\n                <AboutCard img={dollar} text={text} heading='Affordable'/>\r\n                <AboutCard img={dollar} text={text} heading='Affordable'/>\r\n                <AboutCard img={dollar} text={text} heading='Affordable'/>\r\n                <AboutCard img={dollar} text={text} heading='Affordable'/>                \r\n            </SimpleGrid>\r\n            \r\n        </Box>\r\n     );\r\n}\r\n \r\nexport default About;","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\aboutCard\\aboutCard.jsx",[],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\blog\\blog.jsx",["247","248","249"],"import React from 'react';\r\nimport Hero from '../../components/hero/hero'\r\nimport {\r\n    Box,\r\n    SimpleGrid,\r\n    \r\n} from \"@chakra-ui/react\"\r\nimport BlogCard from '../../components/blogCard/blogCard'\r\nimport dollar from '../../assets/home.jpg'\r\nimport { useSelector } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nlet text = 'Some vague text about how using our service helps people and some other stuff. TBH this is just to fill up space, content would come much later Some vague text about how using our service helps people and some other stuff. TBH this is just to fill up space, content would come much later  Some vague text about how using our service helps people and some other stuff. TBH this is just to fill up space, content would come much later'\r\n\r\nconst Blog = ({ match, history }) => {\r\n    const currentBlogs = useSelector(state => state.blogs.blogs)\r\n    console.log('===>',currentBlogs)\r\n    return ( \r\n        <Box bg='gray.100' >\r\n            <Hero text=\"Blog\" /> \r\n            <SimpleGrid minChildWidth=\"300px\" paddingY='50px' spacing=\"40px\" m='auto' justifyContent='space-between' width={['90%', '80%', null]}>\r\n                {\r\n                    currentBlogs.map(({ id, image, text, timestamp, title }) => (\r\n                        <div\r\n                            className=\"link\"\r\n                            key={id}\r\n                            onClick={() => history.push(`${match.path}/${id}`)}\r\n                        >                            \r\n                            <BlogCard date={timestamp} image={image} text={text} heading={title}/>\r\n                        </div>\r\n                    ))\r\n                }              \r\n            </SimpleGrid>\r\n            \r\n        </Box>\r\n     );\r\n}\r\n \r\nexport default withRouter(Blog);\r\n\r\n\r\n{/* <div\r\n                                            className=\"link\"\r\n                                            key={listing.id}\r\n                                            onClick={() => history.push(`${match.path}/${listing.id}`)}\r\n                                        >\r\n                                            <ListingCard listing={listing} />\r\n                                        </div> */}","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\blogCard\\blogCard.jsx",["250","251"],"import React from 'react';\r\nimport {\r\n    Flex,\r\n    Image,\r\n    Text,\r\n    Heading\r\n    \r\n} from \"@chakra-ui/react\"\r\n\r\n\r\nconst BlogCard = ({ image, heading, text, date }) => {\r\n    const toDateTime = (secs) => {\r\n        var t = new Date(1970, 0, 1); // Epoch\r\n        t.setSeconds(secs);\r\n        return t;\r\n    }\r\n    console.log(toDateTime(date.seconds))\r\n    let blogDate = toDateTime(date.seconds).toDateString()\r\n    return ( \r\n        <a href=\"\">\r\n            <Flex _hover={{ bg: \"gray.300\", transform:'scale(0.95)' }} transition='all ease-in-out 0.3s' flexDir='column' alignItems='flex-start'  justifyContent='space-between'  bg=\"white\" m='auto' w={['280px','300px']} height=\"auto\" >\r\n                <div className=\"list-item_image\"\r\n                    style={{\r\n                        backgroundImage: `url(${image})`,\r\n                        backgroundSize: 'cover',\r\n                        backgroundRepeat: 'no-repeat',\r\n                        backgroundPosition:'center',\r\n                        width: '100%',\r\n                        height: '230px',\r\n                    }}>\r\n                    \r\n                </div>\r\n                <Heading m='20px' marginBottom='0' as=\"h4\" color='brand.bold' size=\"md\">\r\n                    {heading}\r\n                </Heading>\r\n                <Text m='20px' my='0px' fontSize='12px' textAlign='left' color='gray.500'> {blogDate}</Text>\r\n                <Text m='20px' dangerouslySetInnerHTML={{ __html: text }} noOfLines={4} fontSize='14px' textAlign='left' color='gray.700'>\r\n                \r\n                </Text>\r\n            </Flex>\r\n        </a>\r\n               \r\n     );\r\n}\r\n \r\nexport default BlogCard;","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\contact\\contact.jsx",["252","253","254","255","256","257","258","259"],"import React, { useState } from 'react';\r\nimport {\r\n    Box,\r\n    SimpleGrid,\r\n    FormControl,\r\n    FormLabel,\r\n    FormErrorMessage,\r\n    FormHelperText,\r\n    Form, Field,\r\n    Input,\r\n    Button,\r\n    Textarea,\r\n    CircularProgress,\r\n    Flex,\r\n    Heading,\r\n    Text\r\n    \r\n} from \"@chakra-ui/react\"\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faLocationArrow } from '@fortawesome/free-solid-svg-icons'\r\nimport { faMailBulk } from '@fortawesome/free-solid-svg-icons'\r\nimport { faPhone } from '@fortawesome/free-solid-svg-icons'\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport Hero from '../../components/hero/hero'\r\nimport ErrorMessage from '../../components/errorMessage/errorMessage'\r\nimport {SendContact} from './sendContact'\r\nlet text = 'Some vague text about how using our service helps people and some other stuff. TBH this is just to fill up space, content would come much later Some vague text about how using our service helps people and some other stuff. TBH this is just to fill up space, content would come much later  Some vague text about how using our service helps people and some other stuff. TBH this is just to fill up space, content would come much later'\r\n\r\nconst Contact = () => {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const [error, setError] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    \r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        setIsLoading(true);\r\n        try {\r\n            await SendContact({ email, lastName });\r\n            setIsLoading(false);\r\n        } catch (error) {\r\n            setError('An error has occured');\r\n            setIsLoading(false);\r\n            setFirstName('')\r\n            setLastName('')\r\n            setEmail('');\r\n            setMessage('');\r\n        }\r\n    };\r\n    return ( \r\n        <Box>\r\n            <Hero text=\"Contact\" /> \r\n            <Flex p={['20px','50px',null,null,'80px']} flexDir={['column',null,'row']} justifyContent=\"space-between\">\r\n                <Box flex='1' marginRight={['0px', null, '20px']}>\r\n                    <form  onSubmit={handleSubmit}>\r\n                        {error && <ErrorMessage message={error} />}\r\n                        <Flex flexDir={['column',null,'row']} justifyContent='space-between'>\r\n                            <FormControl width={['100%',null,'45%']} isRequired> \r\n                                <FormLabel>First Name</FormLabel>\r\n                                <Input borderColor=\"grey.300\" size=\"md\" focusBorderColor=\"brand.primary\" type=\"text\" placeholder=\"John\" onChange={event => setFirstName(event.currentTarget.value)}/>\r\n                            </FormControl>\r\n                            <FormControl mt={[\"20px\",null, '0px']} width={['100%',null,'45%']}  isRequired> \r\n                                <FormLabel>Last Name</FormLabel>\r\n                                <Input borderColor=\"grey.00\" size=\"md\" focusBorderColor=\"brand.primary\" type=\"text\" placeholder=\"Francis\" onChange={event => setLastName(event.currentTarget.value)}/>\r\n                            </FormControl>\r\n                        </Flex>\r\n                        <FormControl mt=\"20px\" isRequired>\r\n                            <FormLabel>Email</FormLabel>\r\n                            <Input\r\n                                borderColor=\"grey.300\"\r\n                                focusBorderColor=\"brand.primary\"\r\n                                type=\"email\"\r\n                                placeholder=\"test@test.com\"\r\n                                size=\"md\"\r\n                                onChange={event => setEmail(event.currentTarget.value)}\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl mt=\"20px\" isRequired>\r\n                            <FormLabel>Message</FormLabel>\r\n                            <Textarea\r\n                                borderColor=\"grey.300\" focusBorderColor=\"brand.primary\"\r\n                                onChange={event => setMessage(event.currentTarget.value)}\r\n                                placeholder=\"write your message here\"\r\n                                size=\"md\"\r\n                            />\r\n                        </FormControl>\r\n                        \r\n                        \r\n                        <Button mb={10} colorScheme='teal' rightIcon={<FontAwesomeIcon icon={faArrowRight} />} type=\"submit\" width={[\"200px\",\"250px\"]} mt={4}>\r\n                            {isLoading ? (\r\n                                <CircularProgress isIndeterminate size=\"24px\" color=\"brand.primary\" />\r\n                            ) : (\r\n                                'SEND'\r\n                            )}\r\n                        </Button>\r\n                    </form>\r\n                </Box>\r\n                \r\n                <Flex w=\"250px\" flexDir='column' alignItems='flex-start' >\r\n                    <Heading  mb={'20px'}  as=\"h3\" fontWeight='400' letterSpacing='wide' textAlign='center' fontSize={[\"xl\", null, \"xl\", \"2xl\"]} color=\"black\" >\r\n                        Contact Details\r\n                    </Heading>\r\n                    <Flex mb={'10px'} alignItems='center'>\r\n                        <FontAwesomeIcon style={{marginRight:'20px'}} color=\"red\" icon={faLocationArrow} /><Text mb={'10px'}>  This is where we would write the address and the address </Text>\r\n                    </Flex>\r\n                    <Flex mb={'10px'} alignItems='center'>\r\n                        <FontAwesomeIcon style={{marginRight:'20px'}} color=\"red\" icon={faMailBulk} /><Text mb={'10px'}>buhsfbsisbufi@gmail.com </Text>\r\n                    </Flex>\r\n                    <Flex mb={'10px'} alignItems='center'>\r\n                        <FontAwesomeIcon style={{marginRight:'20px'}} color=\"red\" icon={faPhone} /><Text >0708877545, 02077654368</Text>\r\n                    </Flex>\r\n                </Flex>\r\n            </Flex>\r\n        </Box>\r\n     );\r\n}\r\n \r\nexport default Contact;",["260","261"],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\errorMessage\\errorMessage.js",[],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\listings\\listings.jsx",["262","263","264"],"import React, { useState } from 'react'\r\nimport {\r\n    Flex,\r\n    Box,\r\n    SimpleGrid,\r\n    Heading,\r\n    Spinner\r\n} from \"@chakra-ui/react\"\r\nimport { useSelector } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport ListingCard from '../../components/listingCard/listingCard'\r\nimport dollar from '../../assets/home.jpg'\r\nimport Search from '../../components/search/search'\r\nimport Pagination from '../../components/pagination/pagination.component'\r\n\r\n\r\nconst Listings = ({ match, history }) => {\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [postsPerPage] = useState(9)\r\n    const currentListings = useSelector(state => state.listings.searchResult)\r\n\r\n    //get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = currentListings.slice(indexOfFirstPost, indexOfLastPost)\r\n\r\n    //change page\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber)\r\n\r\n    return ( \r\n        <Box bg='gray.200' >\r\n            <Flex\r\n                background= \"linear-gradient( rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5) ), url('/assets/home.jpg')\"\r\n                backgroundPosition=\"center\"\r\n                backgroundRepeat=\"no-repeat\"\r\n                backgroundSize=\"cover\"\r\n                height={['110vh','100vh']}\r\n                align='center'\r\n                justify='center'\r\n                direction='column'\r\n            >\r\n                \r\n                <Search/>\r\n            </Flex>  \r\n            <Heading mt={'24px'} textAlign='center' >\r\n                Listings\r\n            </Heading>\r\n            {\r\n                currentListings.length === 0 ? \r\n                 (<Spinner\r\n                    thickness=\"4px\"\r\n                    speed=\"0.65s\"\r\n                    emptyColor=\"gray.200\"\r\n                    color=\"blue.500\"\r\n                    size=\"xl\"\r\n                    mt='50px'\r\n                    mx='auto'\r\n                    />) : (\r\n                        <SimpleGrid minChildWidth=\"300px\" paddingY='50px' spacing=\"40px\" m='auto' justifyContent='space-between' width={['90%', '80%', null]}>\r\n                            {\r\n                                \r\n                                currentPosts.map((listing) => \r\n                                    (\r\n                                        <div\r\n                                            className=\"link\"\r\n                                            key={listing.id}\r\n                                            onClick={() => history.push(`${match.path}/${listing.id}`)}\r\n                                        >\r\n                                            <ListingCard listing={listing} />\r\n                                        </div>\r\n                                    )\r\n                                )\r\n                            }\r\n                        </SimpleGrid>\r\n                    )\r\n                }\r\n                {/* <Pagination\r\n                    postsPerPage={postsPerPage}\r\n                    totalPosts={currentListings.length}\r\n                    paginate={paginate}\r\n                /> */}\r\n            \r\n            \r\n        </Box>\r\n     );\r\n}\r\n \r\nexport default withRouter(Listings);\r\n","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\listingCard\\listingCard.jsx",["265","266","267","268","269"],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\search\\search.jsx",["270","271","272","273","274","275"],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\listingPage\\listingPage.jsx",["276","277","278"],"import React from 'react';\r\nimport {\r\n    Flex,\r\n  Box,\r\n    Spinner,\r\n    SimpleGrid,\r\n    Heading,\r\n    Divider,\r\n    Skeleton,\r\n    Text,\r\n    Button\r\n} from \"@chakra-ui/react\"\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\nimport ImageGallery from 'react-image-gallery';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBed,faBath,faCar,faMapMarkerAlt,faHome } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction formatNumber(num) {\r\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n  }\r\n\r\nconst ListingPage = ({ match, history }) => {\r\n\r\n    let { id } = useParams();\r\n    const listings = useSelector(state => state.listings.listings)\r\n    const item = listings.filter(item => item.id === id)\r\n    \r\n    const {\r\n        images,\r\n        title,\r\n        price,\r\n        purpose,\r\n        type,\r\n        bedrooms,\r\n        bathrooms,\r\n        cars,\r\n        location,\r\n        address,\r\n        videoLink,\r\n        description\r\n    } = item[0] || {}\r\n\r\n    const images2 = images ? images.map((img) => ({\r\n      original:img\r\n    })) : []\r\n  if (item.length===0)  {\r\n    return (\r\n      <Flex  flexDir='column'>\r\n        <Box height='80px' w='100%' backgroundColor='black' />\r\n        <Flex height='300px' alignItems='center' justifyContent='center'>\r\n          <Spinner />\r\n        </Flex>\r\n      </Flex>\r\n    )\r\n  }\r\n  return (\r\n    <Flex flexDir='column'>\r\n      <Box height='80px' w='100%' backgroundColor='black'/>\r\n    <Flex width={['100%', null, '80%', null, '60%']} flexDir='column' mx='auto' alignItems='center' >\r\n      <Skeleton isLoaded={images?true:false}>\r\n        <ImageGallery\r\n        items={images2}\r\n        showThumbnails={false}\r\n        showBullets={true}\r\n        autoPlay={true}\r\n      />\r\n      </Skeleton>\r\n      <Flex flexDir='column' my='24px' alignItems='center' height='180px' justifyContent='space-between'>\r\n        <Heading as='h6' fontSize='20px' color='brand.secondary' fontWeight='600'>\r\n          {location}\r\n          &bull;\r\n          {type}\r\n        </Heading>\r\n        <Heading as='h2' fontSize={['24px','28px',null,'32px']} >\r\n            {title}\r\n        </Heading>\r\n        <Heading as='h6' fontSize='20px' color='gray.500'>\r\n          {address}\r\n        </Heading>\r\n        <Box textAlign='center'>\r\n          <Text >\r\n            For {purpose}\r\n          </Text>\r\n            \r\n          <Heading fontWeight='700' color='brand.primary'>\r\n            &#8358;{formatNumber(price)}\r\n          </Heading>\r\n        </Box>\r\n      </Flex>\r\n      <Divider />\r\n      <Flex paddingX={['20px',null,'0px']} my='24px' w='100%' justifyContent='space-around'>\r\n        <Flex flexDir='column' alignItems='flex-start'>\r\n          <Text>Rooms</Text>\r\n          <Flex alignItems='center'>\r\n            <FontAwesomeIcon color=\"green\" style={{marginRight:'12px'}} icon={faBed} size='2x' />\r\n            {bedrooms}\r\n          </Flex>\r\n        </Flex>\r\n        <Flex flexDir='column' alignItems='flex-start'>\r\n          <Text>Baths</Text>\r\n          <Flex alignItems='center'>\r\n            <FontAwesomeIcon color=\"green\" style={{marginRight:'12px'}} icon={faBath} size='2x' />\r\n            {bathrooms}\r\n          </Flex>\r\n        </Flex>\r\n        <Flex flexDir='column' alignItems='flex-start'>\r\n          <Text>Cars</Text>\r\n          <Flex alignItems='center'>\r\n            <FontAwesomeIcon color=\"green\" style={{marginRight:'12px'}} icon={faCar} size='2x' />\r\n            {cars}\r\n          </Flex>\r\n        </Flex>\r\n      </Flex>\r\n      <Divider />\r\n      <Flex paddingX={['20px', null, '0px']} w='100%' flexDir='column' mt='24px'>\r\n        <Heading mb='24px' as='h4' fontSize={['18px','20px',null,'24px']} color='brand.secondary'>Description</Heading>\r\n        <Text lineHeight='32px' color='gray.600'>{description}</Text>\r\n      </Flex>\r\n      <Flex paddingX={['20px',null,'0px']} my='24px' w='100%' alignItems='flex-start'>\r\n        <a href={videoLink}>\r\n          <Button colorScheme='green' mr='16px'>\r\n            Watch Tour Here\r\n          </Button>    \r\n        </a>\r\n        <Button as={Link} to='/listings' colorScheme='green' variant='outline'>\r\n          View More Listings\r\n        </Button>\r\n      </Flex>\r\n\r\n      </Flex>\r\n      </Flex>\r\n    );\r\n}\r\n\r\nexport default ListingPage;\r\n","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\scroll-to-top.component.jsx",[],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\redux\\listings\\listings.reducer.js",[],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\sampleData.js",[],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\pagination\\pagination.component.jsx",[],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\container.jsx",[],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\mobileNav\\mobileNav.js",["279"],"import { Box, Text, Flex, Link, Image } from '@chakra-ui/react';\r\nimport { Link as rrdLink } from 'react-router-dom';\r\n\r\nimport Container from '../container';\r\n\r\nconst MobileNav = ({ removeNavbarHandler, mobileNavOpen }) => {\r\n  return (\r\n    <Box\r\n      position=\"fixed\"\r\n      zIndex=\"10\"\r\n      top=\"0\"\r\n      right=\"0\"\r\n      height=\"100vh\"\r\n      width=\"70%\"\r\n      backgroundColor=\"rgba(255, 255, 255, 0.8)\"\r\n      d={mobileNavOpen ? 'block' : 'none'}\r\n      // transition=\".3s ease-out\"\r\n    >\r\n      <Container>\r\n        <Flex h=\"41px\" mb=\"3rem\" justify=\"flex-end\" align=\"center\" mt={6}>\r\n          {/* <Link\r\n            onClick={removeNavbarHandler}\r\n            as={rrdLink}\r\n            to=\"/\"\r\n            _hover={{ textDecoration: 'none' }}\r\n            position=\"relative\"\r\n          >\r\n            <Image\r\n              _hover={{ transform: 'scale(1.1)' }}\r\n              transition=\".3s ease-out\"\r\n              alt=\"Logo\"\r\n              src=\"https://res.cloudinary.com/djksghat4/image/upload/v1606868551/chakra/brand_logo.png\"\r\n            />\r\n          </Link> */}\r\n          <Box\r\n            position=\"relative\"\r\n            onClick={removeNavbarHandler}\r\n            cursor=\"pointer\"\r\n            d={{ base: 'block', md: 'none' }}\r\n          >\r\n            <Box\r\n              position=\"absolute\"\r\n              transform=\"rotate(45deg)\"\r\n              w={8}\r\n              h=\"3px\"\r\n              backgroundColor=\"black\"\r\n              mb={2}\r\n            />\r\n            <Box\r\n              transform=\"rotate(135deg)\"\r\n              w={8}\r\n              h=\"3px\"\r\n              backgroundColor=\"black\"\r\n              mb={2}\r\n            />\r\n          </Box>\r\n        </Flex>\r\n\r\n        <Flex\r\n          fontFamily=\"inter\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-around\"\r\n          flexDir=\"column\"\r\n          height=\"60vh\"\r\n          fontSize=\"1.5rem\"\r\n        >\r\n          <Link\r\n            onClick={removeNavbarHandler}\r\n            color=\"gray.700\"\r\n            as={rrdLink}\r\n            to=\"/listings\"\r\n            _hover={{ textDecoration: 'none' }}\r\n          >\r\n            <Text\r\n              _hover={{ transform: 'scale(1.1)' }}\r\n              transition=\".3s ease-out\"\r\n            >\r\n              Listings\r\n            </Text>\r\n          </Link>\r\n          {/* <Link\r\n            onClick={removeNavbarHandler}\r\n            color=\"gray.700\"\r\n            as={rrdLink}\r\n            to=\"/about\"\r\n            _hover={{ textDecoration: 'none' }}\r\n          >\r\n            <Text\r\n              _hover={{ transform: 'scale(1.1)' }}\r\n              transition=\".3s ease-out\"\r\n            >\r\n              About\r\n            </Text>\r\n          </Link> */}\r\n          <Link\r\n            onClick={removeNavbarHandler}\r\n            color=\"gray.700\"\r\n            as={rrdLink}\r\n            to=\"/how-it-works\"\r\n            _hover={{ textDecoration: 'none' }}\r\n          >\r\n            <Text\r\n              _hover={{ transform: 'scale(1.1)' }}\r\n              transition=\".3s ease-out\"\r\n            >\r\n              How It works\r\n            </Text>\r\n          </Link>\r\n          <Link\r\n            onClick={removeNavbarHandler}\r\n            color=\"gray.700\"\r\n            as={rrdLink}\r\n            to=\"/contact\"\r\n            _hover={{ textDecoration: 'none' }}\r\n          >\r\n            <Text\r\n              _hover={{ transform: 'scale(1.1)' }}\r\n              transition=\".3s ease-out\"\r\n            >\r\n              Contact\r\n            </Text>\r\n          </Link>\r\n          {/* <Link\r\n            onClick={removeNavbarHandler}\r\n            color=\"gray.700\"\r\n            as={rrdLink}\r\n            to=\"/faq\"\r\n            _hover={{ textDecoration: 'none' }}\r\n          >\r\n            <Text\r\n              _hover={{ transform: 'scale(1.1)' }}\r\n              transition=\".3s ease-out\"\r\n            >\r\n              FAQ\r\n            </Text>\r\n          </Link> */}\r\n          <Link\r\n            onClick={removeNavbarHandler}\r\n            color=\"gray.700\"\r\n            as={rrdLink}\r\n            to=\"/blog\"\r\n            _hover={{ textDecoration: 'none' }}\r\n          >\r\n            <Text\r\n              _hover={{ transform: 'scale(1.1)' }}\r\n              transition=\".3s ease-out\"\r\n            >\r\n              Blog\r\n            </Text>\r\n          </Link>\r\n        </Flex>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MobileNav;\r\n","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\header\\header.jsx",["280","281"],"import * as React from \"react\";\r\nimport {Link as rrdLink} from 'react-router-dom'\r\nimport {\r\n\tBox,\r\n\tImage,\r\n\tFlex,\r\n\tLink,\r\n\tButton,\r\n\tText,\r\n\tSelect,\r\n} from \"@chakra-ui/react\";\r\nimport Container from \"../container\";\r\nimport MobileNav from \"../mobileNav/mobileNav\";\r\n\r\nconst Header = () => {\r\n\tconst [mobileNavOpen, setMobileNavOpen] = React.useState(false);\r\n\tconst removeNavbarHandler = () => {\r\n\t\tsetMobileNavOpen(false);\r\n\t};\r\n\tconst openNavbar = () => {\r\n\t\tsetMobileNavOpen(true);\r\n\t};\r\n\treturn (\r\n\t\t<Box position=\"relative\" zIndex={10}>\r\n\t\t\t<Container position=\"absolute\">\r\n\t\t\t\t<Flex\r\n\t\t\t\t\tpy=\"1.5rem\"\r\n                    as=\"header\"\r\n                    w='100%'\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tjustifyContent=\"space-between\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Box flex={{ base: \"0.2\", md: \"0.2\", lg: \"0.5\", xl: \"0.8\" }}>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\thref=\"/\"\r\n\t\t\t\t\t\t\t_hover={{ textDecoration: \"none\" }}\r\n\t\t\t\t\t\t\tposition=\"relative\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t_hover={{ transform: \"scale(1.1)\" }}\r\n\t\t\t\t\t\t\t\ttransition=\".3s ease-out\"\r\n\t\t\t\t\t\t\t\talt=\"Logo\"\r\n\t\t\t\t\t\t\t\tsrc=\"https://res.cloudinary.com/djksghat4/image/upload/v1606868554/chakra/brand_logo.png\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Flex\r\n\t\t\t\t\t\tfontFamily=\"inter\"\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\tjustifyContent=\"space-between\"\r\n\t\t\t\t\t\tflex=\"1\"\r\n\t\t\t\t\t\td={{ base: \"none\", md: \"flex\" }}\r\n\t\t\t\t\t>\r\n                        <Link\r\n                            as={rrdLink}\r\n                            to='/listings'\r\n\t\t\t\t\t\t\tcolor=\"gray.400\"\r\n\t\t\t\t\t\t\t_hover={{ textDecoration: \"none\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t\t_hover={{ transform: \"scale(1.1)\" }}\r\n\t\t\t\t\t\t\t\ttransition=\".3s ease-out\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tListings\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t{/* <Link\r\n\t\t\t\t\t\t\tcolor=\"gray.400\"\r\n\t\t\t\t\t\t\tas={rrdLink}\r\n                            to='/about'\r\n\t\t\t\t\t\t\t_hover={{ textDecoration: \"none\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t\t_hover={{ transform: \"scale(1.1)\" }}\r\n\t\t\t\t\t\t\t\ttransition=\".3s ease-out\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAbout\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</Link> */}\r\n\t\t\t\t\t\t<Link\r\n                            color=\"gray.400\"\r\n                            as={rrdLink}\r\n                            to='/how-it-works'\r\n\t\t\t\t\t\t\t_hover={{ textDecoration: \"none\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t\t_hover={{ transform: \"scale(1.1)\" }}\r\n\t\t\t\t\t\t\t\ttransition=\".3s ease-out\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tHow It works\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link\r\n                            color=\"gray.400\"\r\n                            as={rrdLink}\r\n                            to='/contact'\r\n\t\t\t\t\t\t\t_hover={{ textDecoration: \"none\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t\t_hover={{ transform: \"scale(1.1)\" }}\r\n\t\t\t\t\t\t\t\ttransition=\".3s ease-out\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tContact\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t{/* <Link\r\n\t\t\t\t\t\t\tcolor=\"gray.400\"\r\n\t\t\t\t\t\t\tas={rrdLink}\r\n                            to='/faq'\r\n\t\t\t\t\t\t\t_hover={{ textDecoration: \"none\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t\t_hover={{ transform: \"scale(1.1)\" }}\r\n\t\t\t\t\t\t\t\ttransition=\".3s ease-out\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tFAQ\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</Link> */}\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tcolor=\"gray.400\"\r\n\t\t\t\t\t\t\tas={rrdLink}\r\n                            to='/blog'\r\n\t\t\t\t\t\t\t_hover={{ textDecoration: \"none\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t\t_hover={{ transform: \"scale(1.1)\" }}\r\n\t\t\t\t\t\t\t\ttransition=\".3s ease-out\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tBlog\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tonClick={openNavbar}\r\n\t\t\t\t\t\tcursor=\"pointer\"\r\n\t\t\t\t\t\td={{ base: \"block\", md: \"none\" }}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Box d={mobileNavOpen ? 'none' : 'block'} w={8} h=\"3px\" backgroundColor=\"white\" mb={2} />\r\n\t\t\t\t\t\t<Box d={mobileNavOpen ? 'none' : 'block'} w={8} h=\"3px\" backgroundColor=\"white\" mb={2} />\r\n\t\t\t\t\t\t<Box d={mobileNavOpen ? 'none' : 'block'} w={8} h=\"3px\" backgroundColor=\"white\" mb={2} />\r\n\t\t\t\t\t</Box>\r\n                </Flex>\r\n            </Container>\r\n\t\t\t<MobileNav\r\n\t\t\t\tmobileNavOpen={mobileNavOpen}\r\n\t\t\t\tremoveNavbarHandler={removeNavbarHandler}\r\n\t\t\t/>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default Header;","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\redux\\store.js",[],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\redux\\blogs\\blogs.reducer.js",[],["282","283"],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\blogPage\\blogPage.jsx",["284","285","286"],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\sampleBlogData.js",[],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\login\\login.jsx",["287","288","289","290","291","292"],"import React, { useState } from 'react';\r\nimport {\r\n    Box,\r\n    FormControl,\r\n    FormLabel,\r\n    useToast,\r\n    FormErrorMessage,\r\n    FormHelperText,\r\n    Form, Field,\r\n    Input,\r\n    Button,\r\n    Textarea,\r\n    CircularProgress,\r\n    Flex,\r\n} from \"@chakra-ui/react\"\r\nimport { auth } from '../../firebase'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nimport Hero from '../../components/hero/hero'\r\nimport ErrorMessage from '../../components/errorMessage/errorMessage'\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const toast = useToast()\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        setIsLoading(true);\r\n        try {\r\n            await auth\r\n                .signInWithEmailAndPassword(email, password)\r\n                .catch(function (error) {\r\n                    // Handle Errors here.\r\n                    var errorCode = error.code;\r\n                    var errorMessage = error.message;\r\n                    if (errorCode === 'auth/wrong-password') {\r\n                        toast({\r\n                            title: \"Wrong Password\",\r\n                            description: \"Please try again\",\r\n                            status: \"error\",\r\n                            duration: 9000,\r\n                            isClosable: true,\r\n                        }) \r\n                    } else {\r\n                    alert(errorMessage);\r\n                    }\r\n                });\r\n            // toast({\r\n            //     title: \"Success!!\",\r\n            //     description: \"Login Successful\",\r\n            //     status: \"success\",\r\n            //     duration: 9000,\r\n            //     isClosable: true,\r\n            // }) \r\n        } catch (error) {\r\n            toast({\r\n                title: \"an error occured\",\r\n                description: \"Please try again\",\r\n                status: \"error\",\r\n                duration: 9000,\r\n                isClosable: true,\r\n            }) \r\n        }\r\n        setIsLoading(true);\r\n    };\r\n    return ( \r\n        <Box>\r\n            <Hero text=\"Login\" /> \r\n            <Flex p={['20px','50px',null,null,'80px']} flexDir={['column',null,'row']} justifyContent=\"space-between\">\r\n                <Box flex='1' marginRight={['0px', null, '20px']}>\r\n                    <form  onSubmit={handleSubmit}>\r\n                        {error && <ErrorMessage message={error} />}\r\n                        <FormControl mt=\"20px\" isRequired>\r\n                            <FormLabel>Email</FormLabel>\r\n                            <Input\r\n                                borderColor=\"grey.300\"\r\n                                focusBorderColor=\"brand.primary\"\r\n                                type=\"email\"\r\n                                placeholder=\"test@test.com\"\r\n                                size=\"md\"\r\n                                onChange={event => setEmail(event.currentTarget.value)}\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl mt=\"20px\" isRequired>\r\n                            <FormLabel>Password</FormLabel>\r\n                            <Input\r\n                                borderColor=\"grey.300\"\r\n                                focusBorderColor=\"brand.primary\"\r\n                                type=\"password\"\r\n                                placeholder=\"********\"\r\n                                size=\"md\"\r\n                                onChange={event => setPassword(event.currentTarget.value)}\r\n                            />\r\n                        </FormControl>\r\n                                  \r\n                        <Button mb={10} colorScheme='teal' rightIcon={<FontAwesomeIcon icon={faArrowRight} />} type=\"submit\" width={[\"200px\",\"250px\"]} mt={4}>\r\n                            {isLoading ? (\r\n                                <CircularProgress isIndeterminate size=\"24px\" color=\"brand.primary\" />\r\n                            ) : (\r\n                                'Login'\r\n                            )}\r\n                        </Button>\r\n                    </form>\r\n                </Box>\r\n            </Flex>\r\n        </Box>\r\n     );\r\n}\r\n \r\nexport default Login;","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\adminDashboard\\adminDashboard.jsx",["293"],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\addListing\\addListing.jsx",["294","295","296","297","298"],"import React, { useState } from 'react';\r\nimport {\r\n    Box,\r\n    useToast,\r\n    SimpleGrid,\r\n    Progress,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Button,\r\n    Select,\r\n    Textarea,\r\n    CircularProgress,\r\n    Flex,\r\n    Heading,\r\n    Text\r\n    \r\n} from \"@chakra-ui/react\"\r\nimport firebase from '../../firebase'\r\nimport \"firebase/storage\";\r\n\r\nimport Hero from '../../components/hero/hero'\r\n\r\nconst AddListing = () => {\r\n    const toast = useToast()\r\n\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [purpose, setPurpose] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [bedrooms, setBedrooms] = useState('');\r\n    const [bathrooms, setBathrooms] = useState('');\r\n    const [cars, setCars] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [videoLink, setVideoLink] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [description, setDescription] = useState('');\r\n    const [progress, setProgress] = useState(0);\r\n   \r\n\r\n\r\n    const [error, setError] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    \r\n    const uploadImage = (file) => {\r\n    let image = null\r\n    if (file) {\r\n      image = file\r\n        }\r\n    const uploadTask = firebase.storage().ref(`images/${image.name}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      snapshot => {\r\n        // progress function ...          \r\n        const uploadProgress = Math.round(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );          \r\n          setProgress(uploadProgress)          \r\n      },\r\n      error => {\r\n        // Error function ...\r\n          console.log(error);\r\n          toast({\r\n          title: \"an error occured\",\r\n          description: \"Please try again\",\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n          })         \r\n      },\r\n      () => {\r\n        // complete function ...\r\n        firebase.storage()\r\n          .ref(\"images\")\r\n          .child(image.name)\r\n          .getDownloadURL()\r\n          .then(url => {\r\n            let imageurl = [...images, url]\r\n            setImages(imageurl)\r\n            console.log(images)\r\n          });\r\n          toast({\r\n          title: \"upload successful\",\r\n          description: \"Image Uploaded Successfully\",\r\n          status: \"success\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n          })\r\n          setProgress(0)          \r\n      }\r\n\r\n    )\r\n  }\r\n\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        setIsLoading(true);\r\n        if (progress === 0) {\r\n            try {                \r\n                const db = firebase.firestore()\r\n                db.collection('listings').add({\r\n                    title: title,\r\n                    location: location,\r\n                    price: Number.parseInt(price),\r\n                    purpose: purpose,\r\n                    type: type,\r\n                    bedrooms: Number.parseInt(bedrooms),\r\n                    bathrooms: Number.parseInt(bathrooms),\r\n                    cars: Number.parseInt(cars),\r\n                    address: address,\r\n                    images: images,\r\n                    videoLink: videoLink,\r\n                    description: description,\r\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n                })\r\n                .then(function (docRef) {\r\n                    toast({\r\n                        title: \"Listing added Successfully\",\r\n                        description: \"Your new listing has beed added, please visit the listing page to check it out\",\r\n                        status: \"success\",\r\n                        duration: 9000,\r\n                        isClosable: true,\r\n                    })\r\n                }).then(() => {\r\n                    setAddress(' ')\r\n                        setBathrooms(0)\r\n                        setBedrooms(0)\r\n                        setCars(0)\r\n                        setDescription('')\r\n                        setImages([])\r\n                        setIsLoading(false)\r\n                        setLocation('')\r\n                        setPrice(0)\r\n                        setProgress(0)\r\n                        setPurpose('')\r\n                        setTitle('')\r\n                        setType('')\r\n                        setVideoLink('')\r\n                })                    \r\n                    .catch(function (error) {\r\n                    toast({\r\n                        title: \"An error has occured\",\r\n                        description: \"An error ha occured, please try again\",\r\n                        status: \"error\",\r\n                        duration: 9000,\r\n                        isClosable: true,\r\n                    })\r\n                });    \r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        else {\r\n            toast({\r\n                title: \"Please wait\",\r\n                description: \"An image is still being uploaded\",\r\n                status: \"warning\",\r\n                duration: 9000,\r\n                isClosable: true,\r\n            })\r\n        }\r\n        setIsLoading(false);\r\n    };\r\n    return ( \r\n        <Box marginX='auto' p={['20px','50px',null,null,'80px']} width={['100%',null,'80%']}>\r\n            <form  onSubmit={handleSubmit}>\r\n                <FormControl mb='16px'  isRequired> \r\n                    <FormLabel>Title</FormLabel>\r\n                    <Input borderColor=\"grey.300\" size=\"md\" focusBorderColor=\"brand.primary\" type=\"text\" placeholder=\"Self Contain\" onChange={event => setTitle(event.currentTarget.value)}/>\r\n                </FormControl>\r\n                <FormControl mb='16px' isRequired> \r\n                    <FormLabel>Location</FormLabel>\r\n                    <Select\r\n                        borderColor=\"grey.300\" focusBorderColor=\"brand.primary\"\r\n                        bg=\"white\"\r\n                        color=\"black\"\r\n                        placeholder=\"Select Location\" onChange={event => setLocation(event.currentTarget.value)}>\r\n                            <option value=\"Hilltop\">Hilltop</option>\r\n                            <option value=\"Odenigwe\">Odenigwe</option>\r\n                            <option value=\"Town\">Town</option>\r\n                            <option value=\"Odim\">Odim</option>\r\n                            <option value=\"Campus\">Campus</option>\r\n                            <option value=\"Behind-FLat\">Behind FLat</option>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl mb='16px' isRequired> \r\n                    <FormLabel>Purpose</FormLabel>\r\n                    <Select\r\n                        borderColor=\"grey.300\" focusBorderColor=\"brand.primary\"\r\n                        bg=\"white\"\r\n                        color=\"black\"\r\n                        placeholder=\"Select Location\" onChange={event => setPurpose(event.currentTarget.value)}>\r\n                            <option value=\"Sale\">Sale</option>\r\n                            <option value=\"Sale\">Rent</option>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl mb='16px' isRequired> \r\n                    <FormLabel>Type</FormLabel>\r\n                    <Select\r\n                        borderColor=\"grey.300\" focusBorderColor=\"brand.primary\"\r\n                        bg=\"white\"\r\n                        color=\"black\"\r\n                        placeholder=\"Select option\" onChange={event => setType(event.currentTarget.value)}>\r\n                            <option value=\"office-space\">Office Space</option>\r\n                            <option value=\"self-contain\">Self Contain</option>\r\n                            <option value=\"flat\">Flat</option>\r\n                            <option value=\"single-room\">Single Room</option>\r\n                            <option value=\"bq\">BQ</option>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl mb='16px'  isRequired> \r\n                    <FormLabel>Price</FormLabel>\r\n                    <Input borderColor=\"grey.300\" size=\"md\" focusBorderColor=\"brand.primary\" type=\"text\" placeholder=\"100000\" onChange={event => setPrice(event.currentTarget.value)}/>\r\n                </FormControl>                                                           \r\n                <FormControl mb='16px'  > \r\n                    <FormLabel>Youtube Link</FormLabel>\r\n                    <Input borderColor=\"grey.300\" size=\"md\" focusBorderColor=\"brand.primary\" type=\"url\" placeholder=\"https://www.youtube.com/\" onChange={event => setVideoLink(event.currentTarget.value)}/>\r\n                </FormControl>                                                           \r\n                <FormControl mb='16px'  isRequired> \r\n                    <FormLabel>Address</FormLabel>\r\n                    <Input borderColor=\"grey.300\" size=\"md\" focusBorderColor=\"brand.primary\" type=\"text\" placeholder=\"5 bg close, hilltop.\" onChange={event => setAddress(event.currentTarget.value)}/>\r\n                </FormControl>      \r\n                <Flex mb='16px'>\r\n                    <FormControl  isRequired> \r\n                        <FormLabel>bedrooms</FormLabel>\r\n                        <Input borderColor=\"grey.300\" size=\"md\" focusBorderColor=\"brand.primary\" type=\"number\" placeholder=\"5\" onChange={event => setBedrooms(event.currentTarget.value)}/>\r\n                    </FormControl> \r\n                    <FormControl  isRequired> \r\n                        <FormLabel>bathrooms</FormLabel>\r\n                        <Input borderColor=\"grey.300\" size=\"md\" focusBorderColor=\"brand.primary\" type=\"number\" placeholder=\"1\" onChange={event => setBathrooms(event.currentTarget.value)}/>\r\n                    </FormControl> \r\n                    <FormControl  isRequired> \r\n                        <FormLabel>Cars</FormLabel>\r\n                        <Input borderColor=\"grey.300\" size=\"md\" focusBorderColor=\"brand.primary\" type=\"number\" placeholder=\"5\" onChange={event => setCars(event.currentTarget.value)}/>\r\n                    </FormControl> \r\n                </Flex>\r\n                                                                          \r\n                <FormControl mb='16px' isRequired> \r\n                    <FormLabel>Description</FormLabel>\r\n                    <Textarea\r\n                        isRequired\r\n                        borderColor=\"grey.300\" focusBorderColor=\"brand.primary\"\r\n                        onChange={event => setDescription(event.currentTarget.value)}\r\n                        placeholder=\"write your message here\"\r\n                        size=\"md\"\r\n                    />\r\n                </FormControl> \r\n                <Progress hasStripe value={progress} />\r\n                <SimpleGrid minChildWidth=\"200px\" paddingY='50px' spacing=\"20px\" m='auto' justifyContent='space-between' width='100%' mb='16px'>\r\n                    <FormControl  isRequired> \r\n                        <FormLabel>Image 1</FormLabel>\r\n                        <Input\r\n                            isDisabled={progress !== 0}\r\n                            isRequired\r\n                            size=\"sm\"\r\n                            focusBorderColor=\"brand.primary\"\r\n                            type=\"file\"\r\n                            name=\"image1\"\r\n                            id=\"image1\"\r\n                            onChange={event => uploadImage(event.currentTarget.files[0])}\r\n                        />\r\n                    </FormControl> \r\n                    <FormControl  isRequired> \r\n                        <FormLabel>Image 2</FormLabel>\r\n                        <Input\r\n                            isDisabled={progress !== 0}\r\n                            isRequired\r\n                            size=\"sm\"\r\n                            focusBorderColor=\"brand.primary\"\r\n                            type=\"file\"\r\n                            name=\"image2\"\r\n                            id=\"image2\"\r\n                            onChange={event => uploadImage(event.currentTarget.files[0])}\r\n                        />\r\n                    </FormControl> \r\n                    <FormControl > \r\n                        <FormLabel>Image 3</FormLabel>\r\n                        <Input\r\n                            isDisabled={progress !== 0}\r\n                            size=\"sm\"\r\n                            focusBorderColor=\"brand.primary\"\r\n                            type=\"file\"\r\n                            name=\"image3\"\r\n                            id=\"image3\"\r\n                            onChange={event => uploadImage(event.currentTarget.files[0])}\r\n                        />\r\n                    </FormControl> \r\n                    <FormControl > \r\n                        <FormLabel>Image 4</FormLabel>\r\n                        <Input\r\n                            isDisabled={progress !== 0}\r\n                            size=\"sm\"\r\n                            focusBorderColor=\"brand.primary\"\r\n                            type=\"file\"\r\n                            name=\"image4\"\r\n                            id=\"image4\"\r\n                            onChange={event => uploadImage(event.currentTarget.files[0])}\r\n                        />\r\n                    </FormControl> \r\n                    <FormControl > \r\n                        <FormLabel>Image 5</FormLabel>\r\n                        <Input\r\n                            isDisabled={progress !== 0}\r\n                            size=\"sm\"\r\n                            focusBorderColor=\"brand.primary\"\r\n                            type=\"file\"\r\n                            name=\"image5\"\r\n                            id=\"image5\"\r\n                            onChange={event => uploadImage(event.currentTarget.files[0])}\r\n                        />\r\n                    </FormControl> \r\n                    <FormControl > \r\n                        <FormLabel>Image 6</FormLabel>\r\n                        <Input\r\n                            isDisabled={progress !== 0}\r\n                            size=\"sm\"\r\n                            focusBorderColor=\"brand.primary\"\r\n                            type=\"file\"\r\n                            name=\"image6\"\r\n                            id=\"image6\"\r\n                            onChange={event => uploadImage(event.currentTarget.files[0])}\r\n                        />\r\n                    </FormControl> \r\n                    \r\n                </SimpleGrid>\r\n                <Button mb={10} colorScheme='teal' type=\"submit\" width={[\"200px\",\"250px\"]} mt={4}>\r\n                    {isLoading ? (\r\n                        <CircularProgress isIndeterminate size=\"24px\" color=\"brand.primary\" />\r\n                    ) : (\r\n                        'ADD'\r\n                    )}\r\n                </Button>\r\n            </form>\r\n        </Box>\r\n     );\r\n}\r\n \r\nexport default AddListing;","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\redux\\blogs\\blogs.actions.js",[],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\redux\\listings\\listings.actions.js",[],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\redux\\root-reducer.js",[],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\firebase.js",[],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\contact\\sendContact.js",[],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\adminCard\\adminCard.jsx",[],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\adminList\\adminList.jsx",[],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\contact\\contact2.jsx",["299","300","301"],"import React, { useState } from 'react';\r\nimport {\r\n    Box,\r\n    Link,\r\n    Flex,\r\n    Heading,\r\n    Text,\r\n    Image\r\n    \r\n} from \"@chakra-ui/react\"\r\nimport contact from '../../assets/contact_us.png'\r\nimport Hero from '../../components/hero/hero'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWhatsapp } from '@fortawesome/free-brands-svg-icons'\r\n\r\n\r\nconst Contact = () => {\r\n    return ( \r\n        <Box>\r\n            <Hero text=\"Contact\" /> \r\n            <Flex flexDir=\"column\" alignItems='center'>\r\n                <Image w={['90%', null, null, '50%']} src={contact} alt='contact' />\r\n                <Flex  textAlign='center' alignItems='center' flexDir='column' bgColor='#BFFFDE' padding='16px' marginY=\"24px\">\r\n                    <p>See something you like or want to make a custom request?</p>\r\n                    <p className='talk'>Click the number below to talk with us and let us get you your dream home</p>\r\n                    <Link fontWeight='bold' href=\"tel:09134931040\">\r\n                        09134931040\r\n                    </Link>\r\n                    <p>OR</p>\r\n                    <p className='talk'>Click this number to have a friendly chat with us on whatsapp</p>\r\n                    <Link fontWeight='bold' href=\"https://api.whatsapp.com/send?phone=2349134931040\">\r\n                        <FontAwesomeIcon icon={faWhatsapp} /> 09134931040\r\n                    </Link>\r\n                </Flex>\r\n            </Flex>\r\n        </Box>\r\n     );\r\n}\r\n \r\nexport default Contact;","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\404\\404.jsx",["302"],"import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n    Flex,\r\n    Heading,\r\n    Box,\r\n    Button,\r\n    \r\n} from \"@chakra-ui/react\"\r\nfunction page404() {\r\n    return (\r\n        <Flex flexDir='column' className=\"notfound-container\">\r\n            <Box height='80px' w='100%' backgroundColor='black'/>\r\n            <Flex mt=\"24px\" h=\"40vh\" textAlign='center' flexDir='column'  alignItems=\"center\" className=\"content\">\r\n                <Heading fontSize=\"7rem\" as='h1' color=\"#f70415\">404</Heading>\r\n                <Heading as=\"h3\" fontSize=\"1.4rem\">something's missing</Heading>\r\n                <Heading color=\"#f52020ab\" >The link or page you are looking for cannot be found!</Heading>\r\n                <Link to=\"/\"> <p><span id=\"arrow\">&#8592;</span> Back to the Homepage</p> </Link>\r\n            </Flex>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default page404\r\n","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\editListing\\editListing.jsx",["303","304","305","306","307"],"import React, { useState,useEffect } from 'react';\r\nimport { Link, Route,useParams } from 'react-router-dom'\r\nimport {\r\n    Flex,\r\n    Heading,\r\n    Box,\r\n    Button,\r\n    \r\n} from \"@chakra-ui/react\"\r\n\r\nimport { auth } from '../../firebase'\r\nimport Login from '../login/login'\r\nimport Hero from '../../components/hero/hero'\r\nimport EditListingForm from '../../components/editListing/editListing'\r\n\r\nfunction EditListing() {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    let unsubscribeFromAuth = null\r\n    let { id } = useParams();\r\n    useEffect(() => {\r\n        unsubscribeFromAuth = auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                setCurrentUser(user)\r\n            }\r\n        })\r\n        return () => {\r\n            unsubscribeFromAuth()\r\n        }\r\n    }, [])\r\n    return (\r\n        <Route render={() => (\r\n            currentUser ?\r\n                <Box>\r\n                    <Hero text='Edit Listing' />\r\n                    <EditListingForm id={id} />\r\n                </Box>\r\n            : \r\n                <Login/>  \r\n        )}\r\n        />\r\n        \r\n    )\r\n}\r\n\r\nexport default EditListing\r\n","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\editListing\\editListing.jsx",["308","309"],"import React, { useState } from 'react';\r\nimport {\r\n    Box,\r\n    useToast,\r\n    SimpleGrid,\r\n    Progress,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Button,\r\n    Select,\r\n    Textarea,\r\n    CircularProgress,\r\n    Flex,\r\n    Heading,\r\n    Text\r\n    \r\n} from \"@chakra-ui/react\"\r\nimport firebase from '../../firebase'\r\nimport \"firebase/storage\";\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nconst EditListingForm = ({id}) => {\r\n    const listings = useSelector(state => state.listings.listings)\r\n    const item = listings.filter(item => item.id === id)\r\n\r\n    const toast = useToast()\r\n    const [title, setTitle] = useState(item[0].title);\r\n    const [price, setPrice] = useState(item[0].price);\r\n    const [purpose, setPurpose] = useState(item[0].purpose);\r\n    const [type, setType] = useState(item[0].type);\r\n    const [bedrooms, setBedrooms] = useState(item[0].bedrooms);\r\n    const [bathrooms, setBathrooms] = useState(item[0].bathrooms);\r\n    const [cars, setCars] = useState(item[0].cars);\r\n    const [location, setLocation] = useState(item[0].location);\r\n    const [address, setAddress] = useState(item[0].address);\r\n    const [videoLink, setVideoLink] = useState(item[0].videoLink);\r\n    const [images, setImages] = useState(item[0].images);\r\n    const [description, setDescription] = useState(item[0].description);\r\n    const [progress, setProgress] = useState(0);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    \r\n    const uploadImage = (file,num) => {\r\n    let image = null\r\n    if (file) {\r\n      image = file\r\n        }\r\n    const uploadTask = firebase.storage().ref(`images/${image.name}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      snapshot => {\r\n        // progress function ...          \r\n        const uploadProgress = Math.round(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );          \r\n          setProgress(uploadProgress)          \r\n      },\r\n      error => {\r\n        // Error function ...\r\n          console.log(error);\r\n          toast({\r\n          title: \"an error occured\",\r\n          description: \"Please try again\",\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n          })         \r\n      },\r\n      () => {\r\n        // complete function ...\r\n        firebase.storage()\r\n          .ref(\"images\")\r\n          .child(image.name)\r\n          .getDownloadURL()\r\n          .then(url => {\r\n            let NewImages = [...images]\r\n            NewImages[num] = url\r\n            setImages(NewImages)\r\n          });\r\n          toast({\r\n          title: \"upload successful\",\r\n          description: \"Image Uploaded Successfully\",\r\n          status: \"success\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n          })\r\n          setProgress(0)          \r\n      }\r\n\r\n    )\r\n  }\r\n\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        setIsLoading(true);\r\n        if (progress === 0) {\r\n            try {                \r\n                const db = firebase.firestore()\r\n                db.collection('listings').doc(id).set({\r\n                    title: title,\r\n                    location: location,\r\n                    price: Number.parseInt(price),\r\n                    purpose: purpose,\r\n                    type: type,\r\n                    bedrooms: Number.parseInt(bedrooms),\r\n                    bathrooms: Number.parseInt(bathrooms),\r\n                    cars: Number.parseInt(cars),\r\n                    address: address,\r\n                    images: images,\r\n                    videoLink: videoLink,\r\n                    description: description,\r\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n                })\r\n                .then(function (docRef) {\r\n                    toast({\r\n                        title: \"Listing Edited Successfully\",\r\n                        description: \"Your new listing has beed Edited, please visit the listing page to check it out\",\r\n                        status: \"success\",\r\n                        duration: 9000,\r\n                        isClosable: true,\r\n                    })\r\n                }).then(() => {\r\n                    setAddress(' ')\r\n                        setBathrooms(0)\r\n                        setBedrooms(0)\r\n                        setCars(0)\r\n                        setDescription('')\r\n                        setImages([])\r\n                        setIsLoading(false)\r\n                        setLocation('')\r\n                        setPrice(0)\r\n                        setProgress(0)\r\n                        setPurpose('')\r\n                        setTitle('')\r\n                        setType('')\r\n                        setVideoLink('')\r\n                })                    \r\n                    .catch(function (error) {\r\n                    toast({\r\n                        title: \"An error has occured\",\r\n                        description: \"An error ha occured, please try again\",\r\n                        status: \"error\",\r\n                        duration: 9000,\r\n                        isClosable: true,\r\n                    })\r\n                });    \r\n            } catch (err) {\r\n                console.log(err)\r\n                toast({\r\n                        title: \"An error has occured\",\r\n                        description: \"An error ha occured, please try again\",\r\n                        status: \"error\",\r\n                        duration: 9000,\r\n                        isClosable: true,\r\n                    })\r\n            }\r\n        }\r\n        else {\r\n            toast({\r\n                title: \"Please wait\",\r\n                description: \"An image is still being uploaded\",\r\n                status: \"warning\",\r\n                duration: 9000,\r\n                isClosable: true,\r\n            })\r\n        }\r\n        setIsLoading(false);\r\n    };\r\n    return ( \r\n        <Box marginX='auto' p={['20px','50px',null,null,'80px']} width={['100%',null,'80%']}>\r\n            <form  onSubmit={handleSubmit}>\r\n                <FormControl mb='16px'  isRequired> \r\n                    <FormLabel>Title</FormLabel>\r\n                    <Input borderColor=\"grey.300\" defaultValue={item[0].title} size=\"md\" focusBorderColor=\"brand.primary\" type=\"text\" placeholder=\"Self Contain\" onChange={event => setTitle(event.currentTarget.value)}/>\r\n                </FormControl>\r\n                <FormControl mb='16px' isRequired> \r\n                    <FormLabel>Location</FormLabel>\r\n                    <Select\r\n                        borderColor=\"grey.300\" focusBorderColor=\"brand.primary\"\r\n                        bg=\"white\"\r\n                        color=\"black\"\r\n                        placeholder=\"Select Location\" defaultValue={item[0].location} onChange={event => setLocation(event.currentTarget.value)}>\r\n                            <option value=\"Hilltop\">Hilltop</option>\r\n                            <option value=\"Odenigwe\">Odenigwe</option>\r\n                            <option value=\"Town\">Town</option>\r\n                            <option value=\"Odim\">Odim</option>\r\n                            <option value=\"Campus\">Campus</option>\r\n                            <option value=\"Behind-FLat\">Behind FLat</option>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl mb='16px' isRequired> \r\n                    <FormLabel>Purpose</FormLabel>\r\n                    <Select\r\n                        borderColor=\"grey.300\" focusBorderColor=\"brand.primary\"\r\n                        bg=\"white\"\r\n                        color=\"black\"\r\n                        placeholder=\"Select Location\" defaultValue={item[0].purpose} onChange={event => setPurpose(event.currentTarget.value)}>\r\n                            <option value=\"Sale\">Sale</option>\r\n                            <option value=\"Rent\">Rent</option>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl mb='16px' isRequired> \r\n                    <FormLabel>Type</FormLabel>\r\n                    <Select\r\n                        borderColor=\"grey.300\" focusBorderColor=\"brand.primary\"\r\n                        bg=\"white\"\r\n                        color=\"black\"\r\n                        placeholder=\"Select option\" defaultValue={item[0].type} onChange={event => setType(event.currentTarget.value)}>\r\n                            <option value=\"office-space\">Office Space</option>\r\n                            <option value=\"self-contain\">Self Contain</option>\r\n                            <option value=\"flat\">Flat</option>\r\n                            <option value=\"single-room\">Single Room</option>\r\n                            <option value=\"bq\">BQ</option>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl mb='16px'  isRequired> \r\n                    <FormLabel>Price</FormLabel>\r\n                    <Input defaultValue={item[0].price} borderColor=\"grey.300\" size=\"md\" focusBorderColor=\"brand.primary\" type=\"text\" placeholder=\"100000\" onChange={event => setPrice(event.currentTarget.value)}/>\r\n                </FormControl>                                                           \r\n                <FormControl mb='16px'  > \r\n                    <FormLabel>Youtube Link</FormLabel>\r\n                    <Input defaultValue={item[0].videoLink} borderColor=\"grey.300\" size=\"md\" focusBorderColor=\"brand.primary\" type=\"url\" placeholder=\"https://www.youtube.com/\" onChange={event => setVideoLink(event.currentTarget.value)}/>\r\n                </FormControl>                                                           \r\n                <FormControl mb='16px'  isRequired> \r\n                    <FormLabel>Address</FormLabel>\r\n                    <Input defaultValue={item[0].address} borderColor=\"grey.300\" size=\"md\" focusBorderColor=\"brand.primary\" type=\"text\" placeholder=\"5 bg close, hilltop.\" onChange={event => setAddress(event.currentTarget.value)}/>\r\n                </FormControl>      \r\n                <Flex mb='16px'>\r\n                    <FormControl  isRequired> \r\n                        <FormLabel>bedrooms</FormLabel>\r\n                        <Input defaultValue={item[0].bedrooms} borderColor=\"grey.300\" size=\"md\" focusBorderColor=\"brand.primary\" type=\"number\" placeholder=\"5\" onChange={event => setBedrooms(event.currentTarget.value)}/>\r\n                    </FormControl> \r\n                    <FormControl  isRequired> \r\n                        <FormLabel>bathrooms</FormLabel>\r\n                        <Input defaultValue={item[0].bathrooms} borderColor=\"grey.300\" size=\"md\" focusBorderColor=\"brand.primary\" type=\"number\" placeholder=\"1\" onChange={event => setBathrooms(event.currentTarget.value)}/>\r\n                    </FormControl> \r\n                    <FormControl  isRequired> \r\n                        <FormLabel>Cars</FormLabel>\r\n                        <Input defaultValue={item[0].cars} borderColor=\"grey.300\" size=\"md\" focusBorderColor=\"brand.primary\" type=\"number\" placeholder=\"5\" onChange={event => setCars(event.currentTarget.value)}/>\r\n                    </FormControl> \r\n                </Flex>\r\n                                                                          \r\n                <FormControl mb='16px' isRequired> \r\n                    <FormLabel>Description</FormLabel>\r\n                    <Textarea\r\n                        defaultValue={item[0].description}\r\n                        isRequired\r\n                        borderColor=\"grey.300\" focusBorderColor=\"brand.primary\"\r\n                        onChange={event => setDescription(event.currentTarget.value)}\r\n                        placeholder=\"write your message here\"\r\n                        size=\"md\"\r\n                    />\r\n                </FormControl> \r\n                <Progress hasStripe value={progress} />\r\n                <SimpleGrid minChildWidth=\"200px\" paddingY='50px' spacing=\"20px\" m='auto' justifyContent='space-between' width='100%' mb='16px'>\r\n                    <FormControl > \r\n                        <FormLabel>Image 1</FormLabel>\r\n                        {item[0].images[0] && <img alt='edit' src={item[0].images[0]} />}\r\n                        <Input\r\n                            isDisabled={progress !== 0}\r\n                            size=\"sm\"\r\n                            focusBorderColor=\"brand.primary\"\r\n                            type=\"file\"\r\n                            name=\"image1\"\r\n                            id=\"image1\"\r\n                            onChange={event => uploadImage(event.currentTarget.files[0],0)}\r\n                        />\r\n                    </FormControl> \r\n                    <FormControl > \r\n                        <FormLabel>Image 2</FormLabel>\r\n                        {item[0].images[1] && <img alt='edit' src={item[0].images[1]} />}\r\n                        <Input\r\n                            isDisabled={progress !== 0}\r\n                            size=\"sm\"\r\n                            focusBorderColor=\"brand.primary\"\r\n                            type=\"file\"\r\n                            name=\"image2\"\r\n                            id=\"image2\"\r\n                            onChange={event => uploadImage(event.currentTarget.files[0],1)}\r\n                        />\r\n                    </FormControl> \r\n                    <FormControl > \r\n                        <FormLabel>Image 3</FormLabel>\r\n                        {item[0].images[2] && <img alt='edit' src={item[0].images[2]} />}\r\n                        <Input\r\n                            isDisabled={progress !== 0}\r\n                            size=\"sm\"\r\n                            focusBorderColor=\"brand.primary\"\r\n                            type=\"file\"\r\n                            name=\"image3\"\r\n                            id=\"image3\"\r\n                            onChange={event => uploadImage(event.currentTarget.files[0],2)}\r\n                        />\r\n                    </FormControl> \r\n                    <FormControl > \r\n                        <FormLabel>Image 4</FormLabel>\r\n                        {item[0].images[3] && <img alt='edit' src={item[0].images[3]} />}\r\n                        <Input\r\n                            isDisabled={progress !== 0}\r\n                            size=\"sm\"\r\n                            focusBorderColor=\"brand.primary\"\r\n                            type=\"file\"\r\n                            name=\"image4\"\r\n                            id=\"image4\"\r\n                            onChange={event => uploadImage(event.currentTarget.files[0],3)}\r\n                        />\r\n                    </FormControl> \r\n                    <FormControl > \r\n                        <FormLabel>Image 5</FormLabel>\r\n                        {item[0].images[4] && <img alt='edit' src={item[0].images[4]} />}\r\n                        <Input\r\n                            isDisabled={progress !== 0}\r\n                            size=\"sm\"\r\n                            focusBorderColor=\"brand.primary\"\r\n                            type=\"file\"\r\n                            name=\"image5\"\r\n                            id=\"image5\"\r\n                            onChange={event => uploadImage(event.currentTarget.files[0],4)}\r\n                        />\r\n                    </FormControl> \r\n                    <FormControl > \r\n                        <FormLabel>Image 6</FormLabel>\r\n                        {item[0].images[5] && <img alt='edit' src={item[0].images[5]} />}\r\n                        <Input\r\n                            isDisabled={progress !== 0}\r\n                            size=\"sm\"\r\n                            focusBorderColor=\"brand.primary\"\r\n                            type=\"file\"\r\n                            name=\"image6\"\r\n                            id=\"image6\"\r\n                            onChange={event => uploadImage(event.currentTarget.files[0],5)}\r\n                        />\r\n                    </FormControl> \r\n                    \r\n                </SimpleGrid>\r\n                <Button mb={10} colorScheme='teal' type=\"submit\" width={[\"200px\",\"250px\"]} mt={4}>\r\n                    {isLoading ? (\r\n                        <CircularProgress isIndeterminate size=\"24px\" color=\"brand.primary\" />\r\n                    ) : (\r\n                        'Edit'\r\n                    )}\r\n                </Button>\r\n            </form>\r\n        </Box>\r\n     );\r\n}\r\n \r\nexport default EditListingForm;","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\addBlog\\addBlog.jsx",["310","311"],"import React, { useState } from 'react';\r\nimport {\r\n    Box,\r\n    useToast,\r\n    SimpleGrid,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Button,\r\n    Progress,\r\n    Textarea,\r\n    CircularProgress,\r\n    \r\n} from \"@chakra-ui/react\"\r\nimport firebase from '../../firebase'\r\nimport \"firebase/storage\";\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\nconst AddBlog = () => {\r\n    const toast = useToast()\r\n    const [title, setTitle] = useState('');\r\n    const [text, setText] = useState('');\r\n    const [progress, setProgress] = useState(0);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [image, setImage] = useState('');\r\n\r\n    const handleEditorChange = (e) => {\r\n        setText(e.target.getContent());\r\n    };\r\n    const uploadImage = (file) => {\r\n        let image = null\r\n        if (file) {\r\n            image = file\r\n        }\r\n        const uploadTask = firebase.storage().ref(`images/${image.name}`).put(image);\r\n        uploadTask.on(\r\n            \"state_changed\",\r\n            snapshot => {\r\n                // progress function ...          \r\n                const uploadProgress = Math.round(\r\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                );          \r\n                setProgress(uploadProgress)          \r\n            },\r\n            error => {\r\n                // Error function ...\r\n                console.log(error);\r\n                toast({\r\n                title: \"an error occured\",\r\n                description: \"Please try again\",\r\n                status: \"error\",\r\n                duration: 9000,\r\n                isClosable: true,\r\n                })         \r\n            },\r\n            () => {\r\n                // complete function ...\r\n                firebase.storage()\r\n                .ref(\"images\")\r\n                .child(image.name)\r\n                .getDownloadURL()\r\n                .then(url => {\r\n                    setImage(url)\r\n                });\r\n                toast({\r\n                title: \"upload successful\",\r\n                description: \"Image Uploaded Successfully\",\r\n                status: \"success\",\r\n                duration: 9000,\r\n                isClosable: true,\r\n                })\r\n                setProgress(0)          \r\n            }\r\n        )\r\n    }\r\n    \r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        setIsLoading(true);\r\n        if (progress === 0) {\r\n            try {                \r\n                const db = firebase.firestore()\r\n                db.collection('blogs').add({\r\n                    title: title,\r\n                    text: text,\r\n                    image:image,\r\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n                })\r\n                .then(function (docRef) {\r\n                    toast({\r\n                        title: \"Blog Post added Successfully\",\r\n                        description: \"Your new Blog Post has beed added, please visit the blogs page to check it out\",\r\n                        status: \"success\",\r\n                        duration: 9000,\r\n                        isClosable: true,\r\n                    })\r\n                }).then(() => {\r\n                \r\n                })                    \r\n                    .catch(function (error) {\r\n                    toast({\r\n                        title: \"An error has occured\",\r\n                        description: \"An error ha occured, please try again\",\r\n                        status: \"error\",\r\n                        duration: 9000,\r\n                        isClosable: true,\r\n                    })\r\n                });    \r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        else {\r\n            toast({\r\n                title: \"Please wait\",\r\n                description: \"An image is still being uploaded\",\r\n                status: \"warning\",\r\n                duration: 9000,\r\n                isClosable: true,\r\n            })\r\n        }\r\n        setIsLoading(false);\r\n    };\r\n    return ( \r\n        <Box marginX='auto' p={['20px','50px',null,null,'80px']} width={['100%',null,'80%']}>\r\n            <form  onSubmit={handleSubmit}>\r\n                <FormControl mb='16px'  isRequired> \r\n                    <FormLabel>Title</FormLabel>\r\n                    <Input borderColor=\"grey.300\" size=\"md\" focusBorderColor=\"brand.primary\" type=\"text\" placeholder=\"Self Contain\" onChange={event => setTitle(event.currentTarget.value)}/>\r\n                </FormControl>                                                                                          \r\n                <FormControl mb='16px'  isRequired> \r\n                    <FormLabel>Content</FormLabel>\r\n                    <Editor\r\n                        required\r\n                        apiKey=\"7jad044szb06ppzcv01aj0h8991g7q0frtponvf54wajvoa2\"\r\n                        name=\"text\"\r\n                        initialValue=\"<p>Initial content</p>\"\r\n                        init={{\r\n                        height: 500,\r\n                        menubar: false,\r\n                        plugins: [\r\n                            'advlist autolink lists link ',\r\n                            'charmap  anchor help',\r\n                            'searchreplace visualblocks',\r\n                            'wordcount',\r\n                        ],\r\n                        toolbar:\r\n                            'undo redo | formatselect | bold italic | \\\r\n                        alignleft aligncenter alignright | \\\r\n                        bullist numlist outdent indent | help',\r\n                        }}\r\n                        onChange={handleEditorChange}\r\n                        onBeforeRenderUI={() => console.log('before')}\r\n                    />\r\n                </FormControl>  \r\n                <Progress hasStripe value={progress} />\r\n                <SimpleGrid minChildWidth=\"200px\" paddingY='50px' spacing=\"20px\" m='auto' justifyContent='space-between' width='100%' mb='16px'>\r\n                    <FormControl  isRequired> \r\n                        <FormLabel>Image 1</FormLabel>\r\n                        <Input\r\n                            isDisabled={progress !== 0}\r\n                            isRequired\r\n                            size=\"sm\"\r\n                            focusBorderColor=\"brand.primary\"\r\n                            type=\"file\"\r\n                            name=\"image1\"\r\n                            id=\"image1\"\r\n                            onChange={event => uploadImage(event.currentTarget.files[0])}\r\n                        />\r\n                    </FormControl>                                  \r\n                </SimpleGrid>\r\n                <Button mb={10} colorScheme='teal' type=\"submit\" width={[\"200px\",\"250px\"]} mt={4}>\r\n                    {isLoading ? (\r\n                        <CircularProgress isIndeterminate size=\"24px\" color=\"brand.primary\" />\r\n                    ) : (\r\n                        'ADD POST'\r\n                    )}\r\n                </Button>\r\n            </form>\r\n        </Box>\r\n     );\r\n}\r\n \r\nexport default AddBlog;","C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\adminBlogCard\\adminBlogCard.jsx",["312","313","314","315"],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\components\\editBlogPostForm\\editBlogPostForm.jsx",["316"],"C:\\Users\\user\\Desktop\\dev\\reaction\\topville\\src\\pages\\editBlogPost\\editBlogPost.jsx",["317","318","319","320"],{"ruleId":"321","replacedBy":"322"},{"ruleId":"323","replacedBy":"324"},{"ruleId":"325","severity":1,"message":"326","line":1,"column":17,"nodeType":"327","messageId":"328","endLine":1,"endColumn":25},{"ruleId":"325","severity":1,"message":"329","line":4,"column":8,"nodeType":"327","messageId":"328","endLine":4,"endColumn":11},{"ruleId":"325","severity":1,"message":"330","line":7,"column":8,"nodeType":"327","messageId":"328","endLine":7,"endColumn":13},{"ruleId":"325","severity":1,"message":"331","line":21,"column":8,"nodeType":"327","messageId":"328","endLine":21,"endColumn":22},{"ruleId":"332","severity":1,"message":"333","line":45,"column":6,"nodeType":"334","endLine":45,"endColumn":8,"suggestions":"335"},{"ruleId":"325","severity":1,"message":"336","line":2,"column":32,"nodeType":"327","messageId":"328","endLine":2,"endColumn":36},{"ruleId":"325","severity":1,"message":"337","line":5,"column":8,"nodeType":"327","messageId":"328","endLine":5,"endColumn":11},{"ruleId":"325","severity":1,"message":"338","line":4,"column":8,"nodeType":"327","messageId":"328","endLine":4,"endColumn":13},{"ruleId":"325","severity":1,"message":"339","line":5,"column":8,"nodeType":"327","messageId":"328","endLine":5,"endColumn":14},{"ruleId":"325","severity":1,"message":"340","line":2,"column":30,"nodeType":"327","messageId":"328","endLine":2,"endColumn":35},{"ruleId":"321","replacedBy":"341"},{"ruleId":"323","replacedBy":"342"},{"ruleId":"325","severity":1,"message":"343","line":15,"column":5,"nodeType":"327","messageId":"328","endLine":15,"endColumn":9},{"ruleId":"321","replacedBy":"344"},{"ruleId":"323","replacedBy":"345"},{"ruleId":"325","severity":1,"message":"346","line":6,"column":5,"nodeType":"327","messageId":"328","endLine":6,"endColumn":9},{"ruleId":"325","severity":1,"message":"340","line":7,"column":5,"nodeType":"327","messageId":"328","endLine":7,"endColumn":10},{"ruleId":"325","severity":1,"message":"336","line":8,"column":5,"nodeType":"327","messageId":"328","endLine":8,"endColumn":9},{"ruleId":"325","severity":1,"message":"347","line":9,"column":5,"nodeType":"327","messageId":"328","endLine":9,"endColumn":12},{"ruleId":"325","severity":1,"message":"348","line":9,"column":8,"nodeType":"327","messageId":"328","endLine":9,"endColumn":14},{"ruleId":"325","severity":1,"message":"343","line":13,"column":5,"nodeType":"327","messageId":"328","endLine":13,"endColumn":9},{"ruleId":"349","severity":1,"message":"350","line":42,"column":1,"nodeType":"351","messageId":"352","endLine":48,"endColumn":51},{"ruleId":"325","severity":1,"message":"340","line":4,"column":5,"nodeType":"327","messageId":"328","endLine":4,"endColumn":10},{"ruleId":"353","severity":1,"message":"354","line":20,"column":9,"nodeType":"355","endLine":20,"endColumn":20},{"ruleId":"325","severity":1,"message":"356","line":4,"column":5,"nodeType":"327","messageId":"328","endLine":4,"endColumn":15},{"ruleId":"325","severity":1,"message":"357","line":7,"column":5,"nodeType":"327","messageId":"328","endLine":7,"endColumn":21},{"ruleId":"325","severity":1,"message":"358","line":8,"column":5,"nodeType":"327","messageId":"328","endLine":8,"endColumn":19},{"ruleId":"325","severity":1,"message":"359","line":9,"column":5,"nodeType":"327","messageId":"328","endLine":9,"endColumn":9},{"ruleId":"325","severity":1,"message":"360","line":9,"column":11,"nodeType":"327","messageId":"328","endLine":9,"endColumn":16},{"ruleId":"325","severity":1,"message":"343","line":29,"column":5,"nodeType":"327","messageId":"328","endLine":29,"endColumn":9},{"ruleId":"325","severity":1,"message":"361","line":32,"column":12,"nodeType":"327","messageId":"328","endLine":32,"endColumn":21},{"ruleId":"325","severity":1,"message":"362","line":35,"column":12,"nodeType":"327","messageId":"328","endLine":35,"endColumn":19},{"ruleId":"321","replacedBy":"363"},{"ruleId":"323","replacedBy":"364"},{"ruleId":"325","severity":1,"message":"348","line":13,"column":8,"nodeType":"327","messageId":"328","endLine":13,"endColumn":14},{"ruleId":"325","severity":1,"message":"365","line":15,"column":8,"nodeType":"327","messageId":"328","endLine":15,"endColumn":18},{"ruleId":"325","severity":1,"message":"366","line":30,"column":11,"nodeType":"327","messageId":"328","endLine":30,"endColumn":19},{"ruleId":"325","severity":1,"message":"340","line":4,"column":5,"nodeType":"327","messageId":"328","endLine":4,"endColumn":10},{"ruleId":"325","severity":1,"message":"336","line":5,"column":5,"nodeType":"327","messageId":"328","endLine":5,"endColumn":9},{"ruleId":"325","severity":1,"message":"347","line":6,"column":5,"nodeType":"327","messageId":"328","endLine":6,"endColumn":12},{"ruleId":"325","severity":1,"message":"367","line":14,"column":8,"nodeType":"327","messageId":"328","endLine":14,"endColumn":16},{"ruleId":"353","severity":1,"message":"354","line":22,"column":9,"nodeType":"355","endLine":22,"endColumn":20},{"ruleId":"325","severity":1,"message":"356","line":4,"column":5,"nodeType":"327","messageId":"328","endLine":4,"endColumn":15},{"ruleId":"325","severity":1,"message":"368","line":8,"column":5,"nodeType":"327","messageId":"328","endLine":8,"endColumn":10},{"ruleId":"325","severity":1,"message":"369","line":10,"column":5,"nodeType":"327","messageId":"328","endLine":10,"endColumn":13},{"ruleId":"325","severity":1,"message":"336","line":14,"column":5,"nodeType":"327","messageId":"328","endLine":14,"endColumn":9},{"ruleId":"325","severity":1,"message":"370","line":31,"column":12,"nodeType":"327","messageId":"328","endLine":31,"endColumn":17},{"ruleId":"325","severity":1,"message":"371","line":31,"column":19,"nodeType":"327","messageId":"328","endLine":31,"endColumn":27},{"ruleId":"325","severity":1,"message":"356","line":6,"column":5,"nodeType":"327","messageId":"328","endLine":6,"endColumn":15},{"ruleId":"325","severity":1,"message":"372","line":18,"column":29,"nodeType":"327","messageId":"328","endLine":18,"endColumn":43},{"ruleId":"325","severity":1,"message":"373","line":18,"column":44,"nodeType":"327","messageId":"328","endLine":18,"endColumn":50},{"ruleId":"325","severity":1,"message":"340","line":1,"column":33,"nodeType":"327","messageId":"328","endLine":1,"endColumn":38},{"ruleId":"325","severity":1,"message":"374","line":8,"column":2,"nodeType":"327","messageId":"328","endLine":8,"endColumn":8},{"ruleId":"325","severity":1,"message":"375","line":10,"column":2,"nodeType":"327","messageId":"328","endLine":10,"endColumn":8},{"ruleId":"321","replacedBy":"376"},{"ruleId":"323","replacedBy":"377"},{"ruleId":"325","severity":1,"message":"340","line":9,"column":5,"nodeType":"327","messageId":"328","endLine":9,"endColumn":10},{"ruleId":"325","severity":1,"message":"378","line":16,"column":8,"nodeType":"327","messageId":"328","endLine":16,"endColumn":11},{"ruleId":"379","severity":1,"message":"380","line":69,"column":116,"nodeType":"381","endLine":69,"endColumn":135},{"ruleId":"325","severity":1,"message":"357","line":7,"column":5,"nodeType":"327","messageId":"328","endLine":7,"endColumn":21},{"ruleId":"325","severity":1,"message":"358","line":8,"column":5,"nodeType":"327","messageId":"328","endLine":8,"endColumn":19},{"ruleId":"325","severity":1,"message":"359","line":9,"column":5,"nodeType":"327","messageId":"328","endLine":9,"endColumn":9},{"ruleId":"325","severity":1,"message":"360","line":9,"column":11,"nodeType":"327","messageId":"328","endLine":9,"endColumn":16},{"ruleId":"325","severity":1,"message":"369","line":12,"column":5,"nodeType":"327","messageId":"328","endLine":12,"endColumn":13},{"ruleId":"325","severity":1,"message":"371","line":29,"column":19,"nodeType":"327","messageId":"328","endLine":29,"endColumn":27},{"ruleId":"332","severity":1,"message":"382","line":23,"column":31,"nodeType":"383","endLine":27,"endColumn":11},{"ruleId":"325","severity":1,"message":"347","line":15,"column":5,"nodeType":"327","messageId":"328","endLine":15,"endColumn":12},{"ruleId":"325","severity":1,"message":"336","line":16,"column":5,"nodeType":"327","messageId":"328","endLine":16,"endColumn":9},{"ruleId":"325","severity":1,"message":"384","line":22,"column":8,"nodeType":"327","messageId":"328","endLine":22,"endColumn":12},{"ruleId":"325","severity":1,"message":"370","line":44,"column":12,"nodeType":"327","messageId":"328","endLine":44,"endColumn":17},{"ruleId":"325","severity":1,"message":"371","line":44,"column":19,"nodeType":"327","messageId":"328","endLine":44,"endColumn":27},{"ruleId":"325","severity":1,"message":"326","line":1,"column":17,"nodeType":"327","messageId":"328","endLine":1,"endColumn":25},{"ruleId":"325","severity":1,"message":"347","line":6,"column":5,"nodeType":"327","messageId":"328","endLine":6,"endColumn":12},{"ruleId":"325","severity":1,"message":"336","line":7,"column":5,"nodeType":"327","messageId":"328","endLine":7,"endColumn":9},{"ruleId":"325","severity":1,"message":"374","line":7,"column":5,"nodeType":"327","messageId":"328","endLine":7,"endColumn":11},{"ruleId":"325","severity":1,"message":"385","line":2,"column":10,"nodeType":"327","messageId":"328","endLine":2,"endColumn":14},{"ruleId":"325","severity":1,"message":"346","line":4,"column":5,"nodeType":"327","messageId":"328","endLine":4,"endColumn":9},{"ruleId":"325","severity":1,"message":"347","line":5,"column":5,"nodeType":"327","messageId":"328","endLine":5,"endColumn":12},{"ruleId":"325","severity":1,"message":"374","line":7,"column":5,"nodeType":"327","messageId":"328","endLine":7,"endColumn":11},{"ruleId":"332","severity":1,"message":"382","line":21,"column":31,"nodeType":"383","endLine":25,"endColumn":11},{"ruleId":"325","severity":1,"message":"347","line":15,"column":5,"nodeType":"327","messageId":"328","endLine":15,"endColumn":12},{"ruleId":"325","severity":1,"message":"336","line":16,"column":5,"nodeType":"327","messageId":"328","endLine":16,"endColumn":9},{"ruleId":"325","severity":1,"message":"369","line":11,"column":5,"nodeType":"327","messageId":"328","endLine":11,"endColumn":13},{"ruleId":"386","severity":1,"message":"387","line":149,"column":29,"nodeType":"388","messageId":"389","endLine":151,"endColumn":63},{"ruleId":"325","severity":1,"message":"340","line":4,"column":5,"nodeType":"327","messageId":"328","endLine":4,"endColumn":10},{"ruleId":"325","severity":1,"message":"390","line":7,"column":5,"nodeType":"327","messageId":"328","endLine":7,"endColumn":10},{"ruleId":"325","severity":1,"message":"391","line":8,"column":5,"nodeType":"327","messageId":"328","endLine":8,"endColumn":8},{"ruleId":"325","severity":1,"message":"392","line":41,"column":11,"nodeType":"327","messageId":"328","endLine":41,"endColumn":21},{"ruleId":"386","severity":1,"message":"387","line":167,"column":29,"nodeType":"388","messageId":"389","endLine":169,"endColumn":63},{"ruleId":"325","severity":1,"message":"346","line":4,"column":5,"nodeType":"327","messageId":"328","endLine":4,"endColumn":9},{"ruleId":"325","severity":1,"message":"347","line":5,"column":5,"nodeType":"327","messageId":"328","endLine":5,"endColumn":12},{"ruleId":"325","severity":1,"message":"374","line":7,"column":5,"nodeType":"327","messageId":"328","endLine":7,"endColumn":11},{"ruleId":"332","severity":1,"message":"382","line":21,"column":31,"nodeType":"383","endLine":25,"endColumn":11},"no-native-reassign",["393"],"no-negated-in-lhs",["394"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'FAQ' is defined but never used.","'About' is defined but never used.","'sampleBlogData' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadBlogs', 'loadListings', and 'loadSearchResult'. Either include them or remove the dependency array. If 'loadListings' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["395"],"'Text' is defined but never used.","'Why' is defined but never used.","'shake' is defined but never used.","'shield' is defined but never used.","'Image' is defined but never used.",["393"],["394"],"'text' is assigned a value but never used.",["393"],["394"],"'Flex' is defined but never used.","'Heading' is defined but never used.","'dollar' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'SimpleGrid' is defined but never used.","'FormErrorMessage' is defined but never used.","'FormHelperText' is defined but never used.","'Form' is defined but never used.","'Field' is defined but never used.","'firstName' is assigned a value but never used.","'message' is assigned a value but never used.",["393"],["394"],"'Pagination' is defined but never used.","'paginate' is assigned a value but never used.","'listings' is defined but never used.","'Input' is defined but never used.","'Textarea' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'faMapMarkerAlt' is defined but never used.","'faHome' is defined but never used.","'Button' is defined but never used.","'Select' is defined but never used.",["393"],["394"],"'pic' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Assignments to the 'unsubscribeFromAuth' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'Hero' is defined but never used.","'Link' is defined but never used.","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","'Badge' is defined but never used.","'Box' is defined but never used.","'toDateTime' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"396","fix":"397"},"Update the dependencies array to be: [loadBlogs, loadListings, loadSearchResult]",{"range":"398","text":"399"},[1768,1770],"[loadBlogs, loadListings, loadSearchResult]"]